{"version":3,"sources":["assets/logo/yak-logo-fullbody.svg","dashboard/components/Facility/facility.css","dashboard/tools/toolbox.js","dashboard/api/api.js","dashboard/tools/facilityAutoComplete.js","dashboard/tools/skuFilter.js","dashboard/sidebar/Sidebar.js","dashboard/tools/table.js","dashboard/tools/Card/Card.js","assets/material-dashboard-react.jsx","dashboard/tools/Card/CardHeader.js","dashboard/tools/Card/CardBody.js","dashboard/components/Conversion/nivoPie.js","dashboard/components/Conversion/lineChart.js","dashboard/components/Conversion/Conversion.js","dashboard/components/Conversion/ConversionPath.js","dashboard/components/Export/exportsTable.js","dashboard/components/Export/Export.js","dashboard/components/Settings/Settings.js","dashboard/components/Explorer/Builder.js","dashboard/components/Explorer/Stalker.js","dashboard/components/Explorer/Explorer.js","dashboard/tools/DateComponent.js","dashboard/components/Touch/touchChart.js","dashboard/components/Touch/Touch.js","dashboard/components/Timeframe/lineChart.js","dashboard/components/Timeframe/Timeframe.js","dashboard/components/Geo/Geo.js","dashboard/components/Facility/facilityPie.js","dashboard/components/Facility/facilityVolumeChart.js","dashboard/components/Facility/FacilityVolume.js","dashboard/components/Facility/facilityForm.js","dashboard/components/Facility/facilityAdmitsGoal.js","dashboard/components/Facility/Facility.js","dashboard/components/Facility/PrintComponent.js","dashboard/Dash.js","login/AuthService.js","login/Login.js","App.js","registerServiceWorker.js","reducers/actions/index.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","fAccent","toolbox","storePak","input","stringYakPak","JSON","stringify","window","localStorage","setItem","retrievePak","parse","getItem","SelectedFacility","DateFrame","From","moment","add","format","To","CompareFrom","CompareTo","Filter","conversion","touch","rollup","channel","source","campaign","tier","medium","disorder","network","targetingMethod","message","ageRange","ethnicity","familyRole","gender","income","interestsBehaviors","language","education","occupation","relationship","religion","Touch","tabValue","Conversion","Explorer","Storyboard","searchMetric","storyPivot","Builder","Columns","Timeframe","statusURL","monthlyStatusURL","fofURL","csvEndpoint","document","location","origin","host","api","downloadFile","uploadRequest","data","console","log","axios","post","headers","Content-Type","then","response","filename","split","url","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","catch","err","facility","getFacilityList","get","resp","fof","get404List","security","authenticateLogin","user","pass","formData","FormData","set","pushYakPak","yakPak","toString","status","getStatusInfo","getMonthlyStatusInfo","suggestions","FacilityAutoComplete","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","savedFacilities","selected","state","inputValue","selectedItem","handleKeyDown","event","_this$state","length","keycode","slice","setState","onUpdate","handleInputChange","target","value","handleChange","item","obj","find","o","label","indexOf","concat","toConsumableArray","handleDelete","splice","key","push","FacilityName","type","FacilityType","_this2","_this$state2","react_default","a","downshift_esm","onChange","_ref2","getInputProps","getItemProps","isOpen","inputValue2","selectedItem2","highlightedIndex","className","inputProps","InputProps","ref","other","objectWithoutProperties","TextField_default","assign","objectSpread","inputRef","classes","root","renderInput","fullWidth","startAdornment","map","Chip_default","tabIndex","onDelete","onKeyDown","placeholder","id","Paper_default","square","count","filter","suggestion","keep","toLowerCase","getSuggestions","index","_ref","itemProps","isHighlighted","isSelected","MenuItem_default","component","style","fontWeight","renderSuggestion","React","Component","SKUFilter","currentFilter","rightDrawer","right","toggleDrawer","side","defineProperty","handleSelect","name","dummyObj","clearFilters","cleanFilter","Tooltip_default","title","placement","Button_default","onClick","top","material_icons_react_default","icon","size","color","Drawer_default","anchor","open","onClose","display","margin","position","bottom","left","variant","backgroundColor","reload","width","padding","paddingTop","height","overflowY","role","noValidate","autoComplete","FormControl_default","InputLabel_default","htmlFor","Select_default","multiple","marginBottom","Sidebar","toggleHidden","subConversion","subTimeframe","src","logo","alt","listStyleType","paddingLeft","textAlign","Link","to","Tooltip_Tooltip_default","cursor","verticalAlign","skuFilter","CustomTable","esm_extends","tableHead","tableData","tableHeaderColor","tableResponsive","Table_default","table","undefined","TableHead_default","TableRow_default","prop","TableCell_default","tableCell","tableHeadCell","TableBody_default","defaultProps","withStyles","tableStyle","card","border","marginTop","borderRadius","background","boxShadow","flexDirection","wordWrap","fontSize","cardPlain","cardProfile","cardChart","& p","_classNames","children","plain","profile","chart","rest","cardClasses","classNames","primeCardHeader","mintCardHeader","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","borderTop","fontFamily","lineHeight","textDecoration","minHeight","& small","cardHeaderStyle","& a","cardHeader","borderBottom","zIndex","&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader","&:first-child","&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader","&:not($cardHeaderIcon)","&$cardHeaderStats svg","&$cardHeaderStats i","&$cardHeaderStats$cardHeaderIcon","cardHeaderPlain","marginLeft","marginRight","cardHeaderStats","& $cardHeaderIcon","& h1,& h2,& h3,& h4,& h5,& h6","cardHeaderIcon","&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader","& i","& svg","stats","cardHeaderClasses","cardBody","flex","WebkitBoxFlex","cardBodyPlain","paddingRight","cardBodyProfile","cardBodyClasses","NivoPie","chartData","nivoData","propsColor","Card_Card","Card_CardHeader","Card_CardBody","es","innerRadius","padAngle","cornerRadius","colors","colorBy","borderWidth","borderColor","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","legends","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","LineChart","_Component","calculateDateRange","compareToDate","Date","compareStartDay","compareNumbDays","diff","tempLabels","i","temp","setDate","getDate","unshift","getUTCMonth","populateData","labels","dateLabels","arguments","tempObj","datasets","j","x","y","Math","floor","random","pointLabel","dummyOptions","chartOptions","convertToDay","convertToWeek","toDate","startDay","numbWeeks","convertToMonth","numbMonths","numbDays","primaryLabels","subtract","fill","stack","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","lineTension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","tooltips","titleFontSize","titleSpacing","callbacks","tooltipItem","datasetIndex","yLabel","scales","xAxes","scaleLabel","xName","labelString","time","unit","displayFormats","quarter","distribution","yAxes","stacked","yName","ticks","beginAtZero","inherits","createClass","paddingBottom","float","Button_Button_default","disabled","react_chartjs_2_es","options","TabContainer","Typography_default","handleTabChange","updateDash","parentState","Tabs_default","indicatorColor","textColor","Tab_default","nivoPie_NivoPie","chartCallData","cardConversionTable","lineChart","dataLabel","cardCategoryWhite","&,& a,& a:hover,& a:focus","& a,& a:hover,& a:focus","cardTitleWhite","cardConversionGraph","overflowX","ConversionPath","timeToShow","topPieData","topPieOptions","text","botPieData","botPieOptions","timeFrameToShow","Export","exportName","exportEmail","recurrence","columns","multiline","disorderDetail","targeting","notes","priority","trigger","CardContent_default","container","formControl","textField","autoWidth","FormControlLabel_default","control","Switch_default","checked","checkedB","CardActions_default","exportsTable","minWidth","pos","Settings","handleColumnSelect","Rows","rows","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","FormControl_FormControl_default","InputLabel_InputLabel_default","Select_Select_default","MenuItem_MenuItem_default","col","row","Stalker","match","params","TextField_TextField_default","Grid_default","xs","md","List_default","ListItem_default","ListItemText_default","primary","secondary","withRouter","updateDashBuilder","val","centered","Explorer_TabContainer","Explorer_Stalker","Builder_Builder","DateComponent","dateDenomination","updateToDate","dateFrame","updateFromDate","updateCompareToDate","updateCompareFromDate","handleDateDenominationSelect","tempTo","tempFrom","dateDenom","endOf","startOf","clearDates","handleClickOpen","handleClose","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","FormGroup_default","required","e","InputLabelProps","shrink","DialogActions_default","refreshView","TouchChart","touchMakeup","yAxisID","responsive","weight","Touch_TabContainer","touchChart","handleHistoryChange","tempChartD","showHistory","Timeframe_lineChart","Geo","geoView","mapDatatype","currentState","customConfig","mapHandler","alert","dataset","statesCustomConfig","AL","AK","AZ","AR","CA","CO","CT","DC","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","_this$setState","querySelector","addEventListener","c","Divider","react_usa_map_default","customize","FacilityPie","loadData","tempChartData","percent","toFixed","enableRadialLabels","sliceLabel","FacilityVolumeChart","FacilityVolume","commentBox","rowsMax","facilityPie_FacilityPie","facilityVolumeChart","FacilityFormStepper","activeStep","formAdmits","formInquiries","getStepContent","stepIndex","handleFormChange","handleNext","handleBack","handleReset","steps","Stepper_default","alternativeLabel","Step_default","StepLabel_default","instructions","backButton","theme","spacing","FacilityAdmitsGoal","facilityAdmitPercent","admitGoal","admitVal","facilityAdmitGoal","logoURL","Facility","fName","fLogo","fType","fLoc","fDomain","SelectedFacilityDomain","fAddress","fPhone","spendCommentBox","webformsCommentBox","admitsCommentBox","inquiriesCommentBox","callsCommentBox","trafficCommentBox","cpaCommentBox","month","momLabel","ytd","ytdPrevious","loadFacility","pxToMm","px","getElementById","offsetHeight","mmToPx","mm","range","start","end","Array","join","printReport","inputHeightMm","a4HeightPx","numPages","a4HeightMm","comp","inputHeightPx","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","facilityStyle","replace","rel","CardMedia_default","maxWidth","image","facilityAdmitsGoal_FacilityAdmitsGoal","align","scope","borderLeft","Facility_FacilityVolume","facilityForm","PrintComponent","lib_default","pageStyle","content","componentRef","components_Facility_Facility","el","savedState","Dash","updateSelectedFacility","domain","updateSKUFilter","updateDate","updateDashConversion","updateDashTimeframe","updateDashStoryboard","updateDashExplorer","onbeforeunload","isAuthenticated","facilityAutoComplete","tools_DateComponent","sidebar_Sidebar","Route","path","render","components_Touch_Touch","exact","components_Conversion_Conversion","Conversion_ConversionPath","components_Explorer_Explorer","components_Export_Export","components_Timeframe_Timeframe","components_Geo_Geo","Settings_Settings","Facility_PrintComponent","AuthService","setToken","idToken","getToken","logout","removeItem","_checkStatus","error","Error","statusText","fetch","bind","login","getProfile","username","password","method","res","token","Promise","resolve","isTokenExpired","exp","now","Accept","loggedIn","json","Login","assertThisInitialized","handleFormSubmit","Auth","history","CardContent_CardContent_default","CardActions_CardActions_default","onSubmit","preventDefault","App","verifyLogin","onUpdateUser","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","hash","dashboard_Dash","store","src_login_Login","connect","items","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","UPDATE_USER","genericReducer","payload","combineReducers","_ref3","_ref4","_ref5","defaultState","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","getState","ReactDOM","HashRouter","react_redux_es","src_App_0","process","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d9316beb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yak-logo-fullbody.a6e0e09b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fAccent\":\"var(--fAccent)\"};","// Collection of global Dash funcs\nimport moment from \"moment\";\n\nexport default {\n    storePak: (input) => {\n        // Convert JSON input to string\n        let stringYakPak = JSON.stringify(input);\n\n        // Save it to local storage\n        window.localStorage.setItem('yakPak', stringYakPak);\n    },\n    retrievePak: () => {\n        // Retrieve and return yakPak local store string and rehydrate it  (convert back to JSON)\n        if (JSON.parse(window.localStorage.getItem('yakPak')) == null) {\n            return {\n                SelectedFacility: [],\n                DateFrame: {\n                    From: moment().add(-7, 'days').format('YYYY-MM-DD'),\n                    To: moment().format('YYYY-MM-DD'),\n                    CompareFrom: '',\n                    CompareTo: ''\n                },\n                Filter: {\n                    conversion: [],\n                    touch: [],\n                    rollup: [],\n                    channel: [],\n                    source: [],\n                    campaign: [],\n                    tier: [],\n                    medium: [],\n                    disorder: [],\n                    network: [],\n                    targetingMethod: [],\n                    format: [],\n                    message: [],\n                    ageRange: [],\n                    ethnicity: [],\n                    familyRole: [],\n                    gender: [],\n                    income: [],\n                    interestsBehaviors: [],\n                    language: [],\n                    education: [],\n                    occupation: [],\n                    relationship: [],\n                    religion: []\n                },\n                Touch: {\n                    tabValue: 0\n                },\n                Conversion: {\n                    tabValue: 0\n                },\n                Explorer: {\n                    tabValue: 0\n                },\n                Storyboard: {\n                    tabValue: 0,\n                    searchMetric: 'ip',\n                    storyPivot: 'session'\n                },\n                Builder: {\n                    Columns: [],\n                },\n                Timeframe: {\n                    tabValue: 0\n                },\n            };\n        } else {\n            return JSON.parse(window.localStorage.getItem('yakPak'));\n        }\n    }\n}","import axios from \"axios\";  // request library\n\n// url for monitor status info endpoint\nlet statusURL = \"http://monitoring-env.qj3cticwqw.us-east-1.elasticbeanstalk.com/api/monitorstatus\";\nlet monthlyStatusURL = \"http://monitoring-env.qj3cticwqw.us-east-1.elasticbeanstalk.com/api/monthlymonitorstatus\";\nlet fofURL = \"http://monitoring-env.qj3cticwqw.us-east-1.elasticbeanstalk.com/api/404list\";\nlet facilityListURL = \"http://monitoring-env.qj3cticwqw.us-east-1.elasticbeanstalk.com/api/getFacilities\";\nlet authURL = \"\";\nlet updateURL = \"/updatePak\";\nlet csvEndpoint = document.location.origin + \"/api/csv\";\n\n// Check if we need to convert to relative url because basic auth\nif (document.location.host === \"monitor.acadiadevelopment.com\") {\n    statusURL = \"http://\" + document.location.host + \"/api/monitorstatus\";\n    monthlyStatusURL = \"http://\" + document.location.host + \"/api/monthlymonitorstatus\";\n    fofURL = \"http://\" + document.location.host + \"/api/404list\";\n}\n\n\nexport default {\n    downloadFile: {\n        uploadRequest: (data) => {\n            console.log(\"API Request to: \", csvEndpoint);\n            return axios.post(csvEndpoint, data, {headers: {'Content-Type': 'multipart/form-data'}})\n                .then((response) => {\n                    console.log(\"Headers: \", response.headers);\n                    // get filename from resp\n                    const filename = response.headers['content-disposition'].split('filename=')[1];\n\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', filename);\n                    document.body.appendChild(link);\n                    link.click();\n                    return response.data;\n                })\n                .catch((err) => {\n                    console.log(\"Upload ERR: \", err);\n                })\n        }\n    },\n    facility: {\n        getFacilityList: () => {\n            return axios.get(facilityListURL).then((resp) => {\n                // console.log(resp.data);\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET Facility List ERR: \", err);\n                })\n        }\n    },\n    fof: {\n        get404List: () => {\n            return axios.get(fofURL).then((resp) => {\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET 404 ERR: \", err);\n                })\n        }\n    },\n    security: {\n        authenticateLogin: (user, pass) => {\n            // Set user creds in from data\n            let formData = new FormData();\n            formData.set('user', user);\n            formData.set('pass', pass);\n\n            return axios.post(authURL, formData, {headers: {'Content-Type': 'multipart/form-data'}})\n                .then((resp) => {\n                    return resp.data\n                })\n                .catch((err) => {\n                    console.log(\"Authentication ERR: \", err)\n                })\n        },\n        pushYakPak: (yakPak) => {\n            // Access the user's pak and push to goauth server to save\n            let formData = new FormData();\n            formData.set('yakpak', yakPak.toString());\n\n            axios.post(updateURL, formData, {headers: {'Content-Type': 'multipart/form-data'}})\n                .then((resp) => {\n                    console.log(\"pak stored.\")\n                })\n                .catch((err) => {\n                    console.log(\"Pak store ERR: \", err)\n                })\n        }\n    },\n    status: {\n        getStatusInfo: () => {\n            return axios.get(statusURL).then((resp) => {\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET Status ERR: \", err);\n                })\n        },\n        getMonthlyStatusInfo: () => {\n            return axios.get(monthlyStatusURL).then((resp) => {\n                return resp.data;\n            })\n                .catch((err) => {\n                    console.log(\"GET MonthlyStatus ERR: \", err);\n                })\n        }\n    },\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport api from '../api/api';\n\n\nlet suggestions = [];\n\nfunction renderInput(inputProps) {\n    const { InputProps, ref, ...other } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: 'autoComplete-inputRoot',\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\n// Get list of facility/domain pairs\nfunction retrieveList() {\n    // Get weekly status\n    api.facility.getFacilityList().then(resp => {\n        suggestions = [\n            {\n                label: \"All CTC\",\n                url: \"CTC\"\n            },\n            {\n                label: \"All Inpatient\",\n                url: \"Inpatient\"\n            },\n            {\n                label: \"All Residential Dual\",\n                url: \"Residential Dual\"\n            },\n            {\n                label: \"All Residential SA\",\n                url: \"Residential SA\"\n            },\n            {\n                label: \"All Specialty\",\n                url: \"Specialty\"\n            }\n        ];\n        for (let key in resp) {\n            suggestions.push(\n                {\n                    label: resp[key].FacilityName,\n                    url: key,\n                    type: resp[key].FacilityType\n                }\n            )\n        }\n        suggestions.push();\n    });\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion.label}\n            url={suggestion.url}\n            selected={isHighlighted}\n            component=\"div\"\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion.label}\n        </MenuItem>\n    );\n}\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.number,\n    index: PropTypes.number,\n    itemProps: PropTypes.object,\n    selectedItem: PropTypes.string,\n    suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(inputValue) {\n    let count = 0;\n\n    return suggestions.filter(suggestion => {\n        const keep =\n            (!inputValue || suggestion.label.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1) &&\n            count < 10;  // max suggestions to show\n\n        if (keep) {\n            count += 1;\n        }\n\n        return keep;\n    });\n}\n\n\nclass FacilityAutoComplete extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        if (suggestions.length < 1) {\n            retrieveList();\n        }\n    }\n\n    // Check local storage for saved facilities\n    savedFacilities = this.props.selected;\n\n    state = {\n        inputValue: '',\n        selectedItem: this.savedFacilities //this.savedFacilities.length > 0 ? this.savedFacilities.split(',') : [],\n    };\n\n    handleKeyDown = event => {\n        let { inputValue, selectedItem } = this.state;\n        if (selectedItem.length && !inputValue.length && keycode(event) === 'backspace') {\n            selectedItem = selectedItem.slice(0, selectedItem.length - 1);\n            this.setState({\n                selectedItem\n            });\n\n            // Pass updated selected facilities back to parent component\n            this.props.onUpdate(selectedItem);\n            // localStorage.setItem(\"selectedFacilities\", selectedItem);\n        }\n    };\n\n    // Handle user's character input\n    handleInputChange = event => {\n        this.setState({ inputValue: event.target.value });\n    };\n\n    // Updates state with selected facility name\n    handleChange = item => {\n        let { selectedItem } = this.state;\n\n        // Get the object in the suggestions list matching the facility label(name) selected\n        let obj = suggestions.find(o => o.label === item);\n\n        if (selectedItem.indexOf(item) === -1) {\n            selectedItem = [...selectedItem, item];\n        }\n\n        this.setState({\n            inputValue: '',\n            selectedItem,\n        });\n\n        // Pass updated selected facilities back to parent component\n        this.props.onUpdate(selectedItem, obj.url);\n        //localStorage.setItem(\"selectedFacilities\", selectedItem);\n    };\n\n    handleDelete = item => () => {\n        const selectedItem = [...this.state.selectedItem];\n        selectedItem.splice(selectedItem.indexOf(item), 1);\n\n        this.setState({ selectedItem });\n\n        // Pass updated selected facilities back to parent component\n        this.props.onUpdate(selectedItem);\n        //localStorage.setItem(\"selectedFacilities\", selectedItem);\n    };\n\n    render() {\n        const { inputValue, selectedItem } = this.state;\n\n        return (\n            <Downshift inputValue={inputValue} onChange={this.handleChange} selectedItem={selectedItem}>\n                {({\n                      getInputProps,\n                      getItemProps,\n                      isOpen,\n                      inputValue: inputValue2,\n                      selectedItem: selectedItem2,\n                      highlightedIndex,\n                  }) => (\n                    <div className='autoComplete-container'>\n                        {renderInput({\n                            fullWidth: true,\n                            InputProps: getInputProps({\n                                startAdornment: selectedItem.map(item => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className='autoComplete-chip'\n                                        onDelete={this.handleDelete(item)}\n                                    />\n                                )),\n                                onChange: this.handleInputChange,\n                                onKeyDown: this.handleKeyDown,\n                                placeholder: 'Search facility',\n                                id: 'integration-downshift-multiple',\n                            }),\n                        })}\n                        {isOpen ? (\n                            <Paper className='autoComplete-paper' square>\n                                {getSuggestions(inputValue2).map((suggestion, index) =>\n                                    renderSuggestion({\n                                        suggestion,\n                                        index,\n                                        itemProps: getItemProps({ item: suggestion.label, url: suggestion.url }),\n                                        highlightedIndex,\n                                        selectedItem: selectedItem2,\n                                    }),\n                                )}\n                            </Paper>\n                        ) : null}\n\n                    </div>\n                )}\n\n            </Downshift>\n        );\n    }\n}\n\nexport default FacilityAutoComplete;","import React from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nclass SKUFilter extends React.Component {\n\n    currentFilter = this.props.selected;\n    rightDrawer = this.props.rightDrawer;\n\n    state = {\n        Filter: this.currentFilter,\n        right: this.rightDrawer\n    };\n\n    toggleDrawer = (side) => () => {\n\n        if (this.state.right) {\n            this.setState({\n                [side]: false,\n            });\n        } else {\n            this.setState({\n                [side]: true,\n            });\n        }\n\n    };\n\n    // update sku filter state\n    handleSelect = name => event => {\n        // console.log(event.target.name, event.target.value);\n        // dummy object so we don't clear other filter values\n        let dummyObj = this.state.Filter;\n        dummyObj[name] = event.target.value;\n\n        this.setState({\n            Filter: dummyObj\n        });\n        // console.log(this.state.Filter);\n\n        // re-assign dummyObj\n        dummyObj = this.state.Filter;\n\n        // send update to main state\n        this.props.onUpdate(dummyObj);\n    };\n\n    // clear filters from state\n    clearFilters = () => {\n        let cleanFilter = {\n            conversion: [],\n            touch: [],\n            rollup: [],\n            channel: [],\n            source: [],\n            campaign: [],\n            tier: [],\n            medium: [],\n            disorder: [],\n            network: [],\n            targetingMethod: [],\n            format: [],\n            message: [],\n            ageRange: [],\n            ethnicity: [],\n            familyRole: [],\n            gender: [],\n            income: [],\n            interestsBehaviors: [],\n            language: [],\n            education: [],\n            occupation: [],\n            relationship: [],\n            religion: []\n        };\n\n        this.setState({\n            Filter: cleanFilter\n        });\n\n        this.props.onUpdate(cleanFilter);\n    };\n\n    render() {\n        return (\n            <div className=\"filterComponent\">\n                <Tooltip title=\"Show Filters\" placement=\"bottom\">\n                    <Button onClick={this.toggleDrawer('right')} style={{top: '5px'}}>\n                        <MaterialIcon icon='filter_list' size={24} color='#ff9800'/>\n                    </Button>\n                </Tooltip>\n\n                <Drawer\n                    anchor=\"right\"\n                    open={this.state.right}\n                    onClose={this.toggleDrawer('right')}\n                    style={{display: 'block'}}\n                >\n                    <div style={{margin: 'auto', position: 'absolute', bottom: '8px', left: '25%'}}>\n                        <Button variant=\"contained\"\n                                style={{backgroundColor: '#ff9800', color: '#ffffff', margin: '5px'}}\n                                onClick={() => {\n                                    this.toggleDrawer('right', false);\n                                    window.location.reload();\n                                }}>\n                            Apply\n                        </Button>\n                        <Button variant=\"contained\" style={{margin: '5px'}}\n                                onClick={() => {\n                                    this.clearFilters();\n                                    //window.location.reload();\n                                }}>\n                            Clear\n                        </Button>\n                    </div>\n                    <div\n                        style={{width: 400, padding: 20, paddingTop: 5, height: '90%', overflowY: 'scroll'}}\n                        tabIndex={0}\n                        role=\"button\"\n                        onKeyDown={this.toggleDrawer('right')}\n                    >\n                        <form className=\"skuFilter\" noValidate autoComplete=\"off\">\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterConversion\">Conversion</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.conversion}\n                                    onChange={this.handleSelect('conversion')}\n                                    inputProps={{\n                                        name: 'conversion',\n                                        id: 'filterConversion',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'phone'}>Phone Call</MenuItem>\n                                    <MenuItem value={'webForm'}>Web Form</MenuItem>\n                                    <MenuItem value={'tos5'}>5+ TOS</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterTouch\">Touch</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.touch}\n                                    onChange={this.handleSelect('touch')}\n                                    inputProps={{\n                                        name: 'touch',\n                                        id: 'filterTouch',\n                                    }}\n                                >\n                                    <MenuItem value={'first'}>First</MenuItem>\n                                    <MenuItem value={'converting'}>Converting</MenuItem>\n                                    <MenuItem value={'Latest'}>Latest</MenuItem>\n                                    <MenuItem value={'contributing'}>Contributing</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterRollup\">Rollup</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.rollup}\n                                    onChange={this.handleSelect('rollup')}\n                                    inputProps={{\n                                        name: 'rollup',\n                                        id: 'filterRollup',\n                                    }}\n                                >\n                                    <MenuItem value={'direct'}>Direct</MenuItem>\n                                    <MenuItem value={'email'}>Email</MenuItem>\n                                    <MenuItem value={'organic'}>Organic</MenuItem>\n                                    <MenuItem value={'paidAdvertising'}>Paid Advertising</MenuItem>\n                                    <MenuItem value={'referring'}>Referring</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterChannel\">Channel</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.channel}\n                                    onChange={this.handleSelect('channel')}\n                                    inputProps={{\n                                        name: 'channel',\n                                        id: 'filterChannel',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'direct'}>Direct</MenuItem>\n                                    <MenuItem value={'email'}>Email</MenuItem>\n                                    <MenuItem value={'email_leadGen'}>Email - Lead Gen</MenuItem>\n                                    <MenuItem value={'email_other'}>Email - Other</MenuItem>\n                                    <MenuItem value={'email_signUp'}>Email - Sign Up</MenuItem>\n                                    <MenuItem value={'organic'}>Organic</MenuItem>\n                                    <MenuItem value={'organic_other'}>Organic - Other</MenuItem>\n                                    <MenuItem value={'organic_bing'}>Organic - Bing</MenuItem>\n                                    <MenuItem value={'organic_google'}>Organic - Google</MenuItem>\n                                    <MenuItem value={'organic_yahoo'}>Organic - Yahoo</MenuItem>\n                                    <MenuItem value={'organic_other_search'}>Organic - Search - Other</MenuItem>\n                                    <MenuItem value={'organic_facebook'}>Organic - Facebook</MenuItem>\n                                    <MenuItem value={'organic_instagram'}>Organic - Instagram</MenuItem>\n                                    <MenuItem value={'organic_linkedin'}>Organic - LinkedIn</MenuItem>\n                                    <MenuItem value={'organic_pinterest'}>Organic - Pinterest</MenuItem>\n                                    <MenuItem value={'organic_youtube'}>Organic - YouTube</MenuItem>\n                                    <MenuItem value={'organic_other_social'}>Organic - Social - Other</MenuItem>\n                                    <MenuItem value={'paidAdvertising'}>Paid Advertising</MenuItem>\n                                    <MenuItem value={'referring'}>Referring</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Choose Help</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Choose Help -\n                                        Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Other</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Psych Today</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Psych Today -\n                                        Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yellow Pages</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yellow Pages -\n                                        Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yelp</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Directories - Yelp - Alcohol</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal - Acadia</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal - ARC</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Internal - Something Fishy</MenuItem>\n                                    <MenuItem value={'referring'}>Referring - Other</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterSource\">Source</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.source}\n                                    onChange={this.handleSelect('source')}\n                                    inputProps={{\n                                        name: 'source',\n                                        id: 'filterSource',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'acadia'}>Acadia</MenuItem>\n                                    <MenuItem value={'arc'}>ARC</MenuItem>\n                                    <MenuItem value={'bing'}>Bing</MenuItem>\n                                    <MenuItem value={'chooseHelp'}>Choose Help</MenuItem>\n                                    <MenuItem value={'exactTarget'}>Exact Target</MenuItem>\n                                    <MenuItem value={'facebook'}>Facebook</MenuItem>\n                                    <MenuItem value={'gdn'}>GDN</MenuItem>\n                                    <MenuItem value={'google'}>Google</MenuItem>\n                                    <MenuItem value={'guidedocs'}>Guidedocs</MenuItem>\n                                    <MenuItem value={'healthyPlace'}>Healthy Place</MenuItem>\n                                    <MenuItem value={'instagram'}>Instagram</MenuItem>\n                                    <MenuItem value={'linkedIn'}>LinkedIn</MenuItem>\n                                    <MenuItem value={'mediaMath'}>Media Math</MenuItem>\n                                    <MenuItem value={'other'}>Other</MenuItem>\n                                    <MenuItem value={'pinterest'}>Pinterest</MenuItem>\n                                    <MenuItem value={'psychToday'}>Psych Today</MenuItem>\n                                    <MenuItem value={'quora'}>Quora</MenuItem>\n                                    <MenuItem value={'somethingFishy'}>Something Fishy</MenuItem>\n                                    <MenuItem value={'tremor'}>Tremor</MenuItem>\n                                    <MenuItem value={'yahoo'}>Yahoo</MenuItem>\n                                    <MenuItem value={'yellowPages'}>Yellow Pages</MenuItem>\n                                    <MenuItem value={'yelp'}>Yelp</MenuItem>\n                                    <MenuItem value={'youtube'}>YouTube</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterCampaign\">Campaign</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.campaign}\n                                    onChange={this.handleSelect('campaign')}\n                                    inputProps={{\n                                        name: 'campaign',\n                                        id: 'filterCampaign',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'alcohol'}>Alcohol</MenuItem>\n                                    <MenuItem value={'amphetamine'}>Amphetamine</MenuItem>\n                                    <MenuItem value={'cocaine'}>Cocaine</MenuItem>\n                                    <MenuItem value={'opiate'}>Opiates</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterTier\">Tier</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.tier}\n                                    onChange={this.handleSelect('tier')}\n                                    inputProps={{\n                                        name: 'tier',\n                                        id: 'filterTier',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'t1'}>T1</MenuItem>\n                                    <MenuItem value={'t2'}>T2</MenuItem>\n                                    <MenuItem value={'t3'}>T3</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterMedium\">Medium</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.medium}\n                                    onChange={this.handleSelect('medium')}\n                                    inputProps={{\n                                        name: 'medium',\n                                        id: 'filterMedium',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'directories'}>Directories</MenuItem>\n                                    <MenuItem value={'internalDirectories'}>Internal Directories</MenuItem>\n                                    <MenuItem value={'leadGen'}>Lead Gen</MenuItem>\n                                    <MenuItem value={'other'}>Other</MenuItem>\n                                    <MenuItem value={'placement'}>Placement</MenuItem>\n                                    <MenuItem value={'search'}>Search</MenuItem>\n                                    <MenuItem value={'searchEngine'}>Search Engine</MenuItem>\n                                    <MenuItem value={'signUp'}>Sign Up</MenuItem>\n                                    <MenuItem value={'social'}>Social</MenuItem>\n                                    <MenuItem value={'sponsorship'}>Sponsorship</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterDisorder\">Disorder</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.disorder}\n                                    onChange={this.handleSelect('disorder')}\n                                    inputProps={{\n                                        name: 'disorder',\n                                        id: 'filterDisorder',\n                                    }}\n                                >\n                                    <MenuItem value={'all'}>All</MenuItem>\n                                    <MenuItem value={'alcohol'}>Alcohol</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <h5 style={{marginBottom: 0, color: '#ff9800'}}>SKU</h5>\n\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterNetwork\">Network</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.network}\n                                    onChange={this.handleSelect('network')}\n                                    inputProps={{\n                                        name: 'network',\n                                        id: 'filterNetwork',\n                                    }}\n                                >\n                                    <MenuItem value={'a0'}>All</MenuItem>\n                                    <MenuItem value={'a1'}>Search</MenuItem>\n                                    <MenuItem value={'a2'}>Display</MenuItem>\n                                    <MenuItem value={'a3'}>Social</MenuItem>\n                                    <MenuItem value={'a4'}>Email</MenuItem>\n                                    <MenuItem value={'a5'}>Ad_Video</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterTargeting\">Targeting</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.targetingMethod}\n                                    onChange={this.handleSelect('targetingMethod')}\n                                    inputProps={{\n                                        name: 'targetingMethod',\n                                        id: 'filterTargeting',\n                                    }}\n                                >\n                                    <MenuItem value={'b0'}>All</MenuItem>\n                                    <MenuItem value={'b1'}>KWD</MenuItem>\n                                    <MenuItem value={'b2'}>MP</MenuItem>\n                                    <MenuItem value={'b3'}>MP - KWD</MenuItem>\n                                    <MenuItem value={'b4'}>Topic</MenuItem>\n                                    <MenuItem value={'b5'}>Topic - KWD</MenuItem>\n                                    <MenuItem value={'b6'}>Connection</MenuItem>\n                                    <MenuItem value={'b7'}>Behavior</MenuItem>\n                                    <MenuItem value={'b8'}>Demographic</MenuItem>\n                                    <MenuItem value={'b9'}>Interest</MenuItem>\n                                    <MenuItem value={'b10'}>Lookalike</MenuItem>\n                                    <MenuItem value={'b11'}>Remarketing</MenuItem>\n                                    <MenuItem value={'b12'}>Newsletter - About</MenuItem>\n                                    <MenuItem value={'b13'}>Newsletter - Programs</MenuItem>\n                                    <MenuItem value={'b14'}>Newsletter - Addiction</MenuItem>\n                                    <MenuItem value={'b15'}>Newsletter - PTSD</MenuItem>\n                                    <MenuItem value={'b16'}>Newsletter - MH</MenuItem>\n                                    <MenuItem value={'b17'}>Run of Site</MenuItem>\n                                    <MenuItem value={'b18'}>Geographic</MenuItem>\n                                    <MenuItem value={'b19'}>Conversion</MenuItem>\n                                    <MenuItem value={'b20'}>Newsletter - Mood</MenuItem>\n                                    <MenuItem value={'b21'}>Custom Segments</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"filterFormat\">Format</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.format}\n                                    onChange={this.handleSelect('format')}\n                                    inputProps={{\n                                        name: 'format',\n                                        id: 'filterFormat',\n                                    }}\n                                >\n                                    <MenuItem value={'c0'}>All</MenuItem>\n                                    <MenuItem value={'c1'}>CanvasAd</MenuItem>\n                                    <MenuItem value={'c2'}>2 Headline</MenuItem>\n                                    <MenuItem value={'c3'}>GIF</MenuItem>\n                                    <MenuItem value={'c4'}>GmailAd</MenuItem>\n                                    <MenuItem value={'c5'}>HTML</MenuItem>\n                                    <MenuItem value={'c6'}>Image Carousel</MenuItem>\n                                    <MenuItem value={'c7'}>Lightbox</MenuItem>\n                                    <MenuItem value={'c8'}>Link Post</MenuItem>\n                                    <MenuItem value={'c9'}>Photo Post</MenuItem>\n                                    <MenuItem value={'c10'}>Responsive</MenuItem>\n                                    <MenuItem value={'c11'}>Static Image</MenuItem>\n                                    <MenuItem value={'c12'}>Video</MenuItem>\n                                    <MenuItem value={'c13'}>Video Carousel</MenuItem>\n                                    <MenuItem value={'c14'}>Long Content - No Image</MenuItem>\n                                    <MenuItem value={'c15'}>Long Content - Image</MenuItem>\n                                    <MenuItem value={'c16'}>Short Content - No Image</MenuItem>\n                                    <MenuItem value={'c17'}>Short Content - Image</MenuItem>\n                                    <MenuItem value={'c18'}>Banner</MenuItem>\n                                    <MenuItem value={'c19'}>Profile</MenuItem>\n                                    <MenuItem value={'c20'}>Text Ad</MenuItem>\n                                    <MenuItem value={'c20'}>3 Headline</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"filterMessage\">Message</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.message}\n                                    onChange={this.handleSelect('message')}\n                                    inputProps={{\n                                        name: 'message',\n                                        id: 'filterMessage',\n                                    }}\n                                >\n                                    <MenuItem value={'d0'}>All</MenuItem>\n                                    <MenuItem value={'d1'}>About - General</MenuItem>\n                                    <MenuItem value={'d2'}>About - Other</MenuItem>\n                                    <MenuItem value={'d3'}>About - Self</MenuItem>\n                                    <MenuItem value={'d4'}>Benefits - General</MenuItem>\n                                    <MenuItem value={'d5'}>Benefits - Other</MenuItem>\n                                    <MenuItem value={'d6'}>Benefits - Self</MenuItem>\n                                    <MenuItem value={'d7'}>Emotion - General</MenuItem>\n                                    <MenuItem value={'d8'}>Emotion - Other</MenuItem>\n                                    <MenuItem value={'d9'}>Emotion - Self</MenuItem>\n                                    <MenuItem value={'d10'}>Leading - General</MenuItem>\n                                    <MenuItem value={'d11'}>Leading - Other</MenuItem>\n                                    <MenuItem value={'d12'}>Leading - Self</MenuItem>\n                                    <MenuItem value={'d13'}>Scare - General</MenuItem>\n                                    <MenuItem value={'d14'}>Scare - Other</MenuItem>\n                                    <MenuItem value={'d15'}>Scare - Self</MenuItem>\n                                    <MenuItem value={'d16'}>Stats - General</MenuItem>\n                                    <MenuItem value={'d17'}>Stats - Other</MenuItem>\n                                    <MenuItem value={'d18'}>Stats - Self</MenuItem>\n                                    <MenuItem value={'d19'}>Urgent - General</MenuItem>\n                                    <MenuItem value={'d20'}>Urgent - Other</MenuItem>\n                                    <MenuItem value={'d21'}>Urgent - Self</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterAgeRange\">Age Range</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.ageRange}\n                                    onChange={this.handleSelect('ageRange')}\n                                    inputProps={{\n                                        name: 'ageRange',\n                                        id: 'filterAgeRange',\n                                    }}\n                                >\n                                    <MenuItem value={'e1'}>18 - 24</MenuItem>\n                                    <MenuItem value={'e2'}>25 - 34</MenuItem>\n                                    <MenuItem value={'e3'}>35 - 44</MenuItem>\n                                    <MenuItem value={'e4'}>35 - 49</MenuItem>\n                                    <MenuItem value={'e5'}>45 - 54</MenuItem>\n                                    <MenuItem value={'e6'}>50 - 64</MenuItem>\n                                    <MenuItem value={'e7'}>55 - 64</MenuItem>\n                                    <MenuItem value={'e8'}>65+</MenuItem>\n                                    <MenuItem value={'e9'}>All</MenuItem>\n                                    <MenuItem value={'e10'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterEthnicity\">Ethnicity</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.ethnicity}\n                                    onChange={this.handleSelect('ethnicity')}\n                                    inputProps={{\n                                        name: 'ethnicity',\n                                        id: 'filterEthnicity',\n                                    }}\n                                >\n                                    <MenuItem value={'f9'}>All</MenuItem>\n                                    <MenuItem value={'f1'}>African American</MenuItem>\n                                    <MenuItem value={'f2'}>Asian</MenuItem>\n                                    <MenuItem value={'f3'}>Hispanic</MenuItem>\n                                    <MenuItem value={'f4'}>Native American</MenuItem>\n                                    <MenuItem value={'f5'}>Pacific Islander</MenuItem>\n                                    <MenuItem value={'f6'}>Two or more</MenuItem>\n                                    <MenuItem value={'f7'}>White</MenuItem>\n                                    <MenuItem value={'f8'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterFamilyRole\">Family Role</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.familyRole}\n                                    onChange={this.handleSelect('familyRole')}\n                                    inputProps={{\n                                        name: 'familyRole',\n                                        id: 'filterFamilyRole',\n                                    }}\n                                >\n                                    <MenuItem value={'g13'}>All</MenuItem>\n                                    <MenuItem value={'g1'}>Brother</MenuItem>\n                                    <MenuItem value={'g2'}>Daughter</MenuItem>\n                                    <MenuItem value={'g3'}>Husband</MenuItem>\n                                    <MenuItem value={'g4'}>Parent - Expecting</MenuItem>\n                                    <MenuItem value={'g5'}>Parent - 0-12 Month</MenuItem>\n                                    <MenuItem value={'g6'}>Parent - Pre-Teen</MenuItem>\n                                    <MenuItem value={'g7'}>Parent - Teen</MenuItem>\n                                    <MenuItem value={'g8'}>Parent - Adult Child</MenuItem>\n                                    <MenuItem value={'g9'}>Sister</MenuItem>\n                                    <MenuItem value={'g10'}>Son</MenuItem>\n                                    <MenuItem value={'g11'}>Wife</MenuItem>\n                                    <MenuItem value={'g12'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterGender\">Gender</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.gender}\n                                    onChange={this.handleSelect('gender')}\n                                    inputProps={{\n                                        name: 'gender',\n                                        id: 'filterGender',\n                                    }}\n                                >\n                                    <MenuItem value={'h4'}>All</MenuItem>\n                                    <MenuItem value={'h1'}>Female</MenuItem>\n                                    <MenuItem value={'h2'}>Male</MenuItem>\n                                    <MenuItem value={'h3'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterIncome\">Income</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.income}\n                                    onChange={this.handleSelect('income')}\n                                    inputProps={{\n                                        name: 'income',\n                                        id: 'filterIncome',\n                                    }}\n                                >\n                                    <MenuItem value={'i12'}>All</MenuItem>\n                                    <MenuItem value={'i1'}>39k or less</MenuItem>\n                                    <MenuItem value={'i2'}>40k - 49k</MenuItem>\n                                    <MenuItem value={'i3'}>50k - 74k</MenuItem>\n                                    <MenuItem value={'i4'}>75k - 99k</MenuItem>\n                                    <MenuItem value={'i5'}>100k - 124k</MenuItem>\n                                    <MenuItem value={'i6'}>125k - 149k</MenuItem>\n                                    <MenuItem value={'i7'}>150k - 249k</MenuItem>\n                                    <MenuItem value={'i8'}>250k - 349k</MenuItem>\n                                    <MenuItem value={'i9'}>350k - 499k</MenuItem>\n                                    <MenuItem value={'i10'}>500k or more</MenuItem>\n                                    <MenuItem value={'i11'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterInterestsBehaviors\">Interest/Behavior</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.interestsBehaviors}\n                                    onChange={this.handleSelect('interestsBehaviors')}\n                                    inputProps={{\n                                        name: 'interestsBehaviors',\n                                        id: 'filterInterestsBehaviors',\n                                    }}\n                                >\n                                    <MenuItem value={'j21'}>All</MenuItem>\n                                    <MenuItem value={'j1'}>Away from Family</MenuItem>\n                                    <MenuItem value={'j2'}>Away from Home</MenuItem>\n                                    <MenuItem value={'j3'}>Business and Industry</MenuItem>\n                                    <MenuItem value={'j4'}>Chronic Relapser</MenuItem>\n                                    <MenuItem value={'j5'}>Democrat</MenuItem>\n                                    <MenuItem value={'j6'}>Detox Seeker</MenuItem>\n                                    <MenuItem value={'j7'}>Entertainment</MenuItem>\n                                    <MenuItem value={'j8'}>Fitness and Wellness</MenuItem>\n                                    <MenuItem value={'j9'}>Food and Drink</MenuItem>\n                                    <MenuItem value={'j10'}>Friends of Alumni</MenuItem>\n                                    <MenuItem value={'j11'}>LGBT Population</MenuItem>\n                                    <MenuItem value={'j12'}>Outdoors</MenuItem>\n                                    <MenuItem value={'j13'}>Politics</MenuItem>\n                                    <MenuItem value={'j14'}>Previous Patient of Competitor</MenuItem>\n                                    <MenuItem value={'j15'}>Republican</MenuItem>\n                                    <MenuItem value={'j16'}>Shopping and Fashion</MenuItem>\n                                    <MenuItem value={'j17'}>Sports</MenuItem>\n                                    <MenuItem value={'j18'}>Technology</MenuItem>\n                                    <MenuItem value={'j19'}>Travel</MenuItem>\n                                    <MenuItem value={'j20'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterLanguage\">Language</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.language}\n                                    onChange={this.handleSelect('language')}\n                                    inputProps={{\n                                        name: 'language',\n                                        id: 'filterLanguage',\n                                    }}\n                                >\n                                    <MenuItem value={'k5'}>All</MenuItem>\n                                    <MenuItem value={'k1'}>English</MenuItem>\n                                    <MenuItem value={'k2'}>Spanish</MenuItem>\n                                    <MenuItem value={'k3'}>Bilingual</MenuItem>\n                                    <MenuItem value={'k4'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterEducation\">Education</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.education}\n                                    onChange={this.handleSelect('education')}\n                                    inputProps={{\n                                        name: 'education',\n                                        id: 'filterEducation',\n                                    }}\n                                >\n                                    <MenuItem value={'l11'}>All</MenuItem>\n                                    <MenuItem value={'l1'}>Some High School</MenuItem>\n                                    <MenuItem value={'l2'}>High School Grad</MenuItem>\n                                    <MenuItem value={'l3'}>Associate Degree</MenuItem>\n                                    <MenuItem value={'l4'}>Some College</MenuItem>\n                                    <MenuItem value={'l5'}>College Grad</MenuItem>\n                                    <MenuItem value={'l6'}>Professional Degree</MenuItem>\n                                    <MenuItem value={'l7'}>Some Grad School</MenuItem>\n                                    <MenuItem value={'l8'}>Masters Degree</MenuItem>\n                                    <MenuItem value={'l9'}>Doctorate Degree</MenuItem>\n                                    <MenuItem value={'l10'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterOccupation\">Occupation</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.occupation}\n                                    onChange={this.handleSelect('occupation')}\n                                    inputProps={{\n                                        name: 'occupation',\n                                        id: 'filterOccupation',\n                                    }}\n                                >\n                                    <MenuItem value={'m17'}>All</MenuItem>\n                                    <MenuItem value={'m1'}>Admin</MenuItem>\n                                    <MenuItem value={'m2'}>Arts</MenuItem>\n                                    <MenuItem value={'m3'}>Business/Finance</MenuItem>\n                                    <MenuItem value={'m4'}>Executive</MenuItem>\n                                    <MenuItem value={'m5'}>Government</MenuItem>\n                                    <MenuItem value={'m6'}>Healthcare</MenuItem>\n                                    <MenuItem value={'m7'}>IT</MenuItem>\n                                    <MenuItem value={'m8'}>Legal</MenuItem>\n                                    <MenuItem value={'m9'}>Manufacturing</MenuItem>\n                                    <MenuItem value={'m10'}>Sales</MenuItem>\n                                    <MenuItem value={'m11'}>Service</MenuItem>\n                                    <MenuItem value={'m12'}>Student - College</MenuItem>\n                                    <MenuItem value={'m13'}>Student - Grad School</MenuItem>\n                                    <MenuItem value={'m14'}>Student - High School</MenuItem>\n                                    <MenuItem value={'m15'}>Unemployed</MenuItem>\n                                    <MenuItem value={'m16'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"\">\n                                <InputLabel htmlFor=\"filterRelationship\">Relationship</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.relationship}\n                                    onChange={this.handleSelect('relationship')}\n                                    inputProps={{\n                                        name: 'relationship',\n                                        id: 'filterRelationship',\n                                    }}\n                                >\n                                    <MenuItem value={'n6'}>All</MenuItem>\n                                    <MenuItem value={'n1'}>Divorced</MenuItem>\n                                    <MenuItem value={'n2'}>Married</MenuItem>\n                                    <MenuItem value={'n3'}>Separated</MenuItem>\n                                    <MenuItem value={'n4'}>Single</MenuItem>\n                                    <MenuItem value={'n5'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel htmlFor=\"filterReligion\">Religion</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    multiple\n                                    value={this.state.Filter.religion}\n                                    onChange={this.handleSelect('religion')}\n                                    inputProps={{\n                                        name: 'religion',\n                                        id: 'filterReligion',\n                                    }}\n                                >\n                                    <MenuItem value={'o11'}>All</MenuItem>\n                                    <MenuItem value={'o1'}>Agnosticism</MenuItem>\n                                    <MenuItem value={'o2'}>Atheism</MenuItem>\n                                    <MenuItem value={'o3'}>Buddhism</MenuItem>\n                                    <MenuItem value={'o4'}>Christianity</MenuItem>\n                                    <MenuItem value={'o5'}>Hindu</MenuItem>\n                                    <MenuItem value={'o6'}>Islam</MenuItem>\n                                    <MenuItem value={'o7'}>Judaism</MenuItem>\n                                    <MenuItem value={'o8'}>Mormonism</MenuItem>\n                                    <MenuItem value={'o9'}>Sikhism</MenuItem>\n                                    <MenuItem value={'o10'}>Undetermined</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    </div>\n                </Drawer>\n            </div>\n\n            //     </ExpansionPanelDetails>\n            // </ExpansionPanel>\n        );\n    }\n}\n\nexport default SKUFilter;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from '../../assets/logo/yak-logo-fullbody.svg';\nimport MaterialIcon from 'material-icons-react';\nimport SKUFilter from '../tools/skuFilter';\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            subConversion: false,\n            subTimeframe: false,\n        };\n    }\n\n    toggleHidden = name => event => {\n        // console.log(name, !this.state[name]);\n        this.setState({\n            [name]: !this.state[name]\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"sidebarComponent\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <h1 className=\"App-title\">YAK</h1>\n\n                <hr/>\n\n                <ul style={{listStyleType: \"none\", paddingLeft: 0, textAlign: 'left', color: \"#fff\"}}>\n                    <Link to=\"/help\">\n                        <Tooltip title=\"HELP!\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='error' color='#EEEEEE'/> Help Section\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/export\">\n                        <Tooltip title=\"Export a File\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='cloud_download' color='#EEEEEE'/> Export\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/facility\">\n                        <Tooltip title=\"Facility Reports\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='view_quilt' color='#EEEEEE'/> Facility\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Tooltip title=\"Timeframe Show/Hide\" placement=\"bottom\">\n                        <li style={{paddingLeft: 25, cursor: \"pointer\"}} onClick={this.toggleHidden(\"subTimeframe\")}>\n                            <span style={{verticalAlign: \"sub\"}}><MaterialIcon icon='calendar_today' color='#EEEEEE'/> </span>\n                            Timeframe\n                        </li>\n                    </Tooltip>\n                    {this.state.subTimeframe && <ul className=\"sidebarSubNav\">\n                        <Link to=\"/timeframe\">\n                            <li>Summary</li>\n                        </Link>\n                        <Link to=\"/timeframe\">\n                            <li>Last Week</li>\n                        </Link>\n                        <Link to=\"/timeframe\">\n                            <li>Last Month</li>\n                        </Link>\n                    </ul>}\n                    <Link to=\"/touch\">\n                        <Tooltip title=\"Touches led to Conversions\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='touch_app' color='#EEEEEE'/> Touch\n                            </li>\n                        </Tooltip>\n                    </Link>\n\n                    <Tooltip title=\"Conversion Show/Hide\" placement=\"bottom\">\n                        <li style={{paddingLeft: 25, cursor: \"pointer\"}} onClick={this.toggleHidden(\"subConversion\")}>\n                            <span style={{verticalAlign: \"sub\"}}><MaterialIcon icon='how_to_reg' color='#EEEEEE'/> </span>\n                            Conversions\n                        </li>\n                    </Tooltip>\n                    {this.state.subConversion && <ul className=\"sidebarSubNav\">\n                        <Link to=\"/conversion/\">\n                            <li>Summary</li>\n                        </Link>\n                        <Link to=\"/conversion/path\">\n                            <li>Path</li>\n                        </Link>\n                    </ul>}\n\n                    <Link to=\"/geo\">\n                        <Tooltip title=\"Geo Data\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='map' color='#EEEEEE'/> Map\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/behavior\">\n                        <Tooltip title=\"User Behavior & Jumping\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='face' color='#EEEEEE'/> Behavior\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/audience\">\n                        <Tooltip title=\"Audience type & SKU mapping\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='assignment' color='#EEEEEE'/> Audience/SKU\n                            </li>\n                        </Tooltip>\n                    </Link>\n                    <Link to=\"/lob\">\n                        <Tooltip title=\"Line of Business/Facility Type\" placement=\"bottom\">\n                            <li style={{paddingLeft: 25}}>\n                                <MaterialIcon icon='business' color='#EEEEEE'/> LOB\n                            </li>\n                        </Tooltip>\n                    </Link>\n\n\n                </ul>\n\n                <div className=\"sidebarBottom\">\n                    <hr/>\n                    <SKUFilter selected={this.props.selected} onUpdate={this.props.onUpdate}\n                               rightDrawer={this.props.rightDrawer}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport tableStyle from \"../../assets/css/material-dashboard.css\";\n\nfunction CustomTable({ ...props }) {\n  const { classes, tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key}>\n                {prop.map((prop, key) => {\n                  return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tableHeaderColor: PropTypes.oneOf([\n      \"prime\",\n      \"mint\",\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n\nexport default withStyles(tableStyle)(CustomTable);\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"20px\",\n    marginTop: \"20px\",\n    borderRadius: \"6px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    background: \"#fff\",\n    width: \"90%\",\n    boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n    position: \"relative\",\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\",\n      padding: \"6px\",\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nfunction Card({ ...props }) {\n  const {\n    classes,\n    className,\n    children,\n    plain,\n    profile,\n    chart,\n    ...rest\n  } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool\n};\n\nexport default withStyles(cardStyle)(Card);\n","/*!\n\n =========================================================\n * Material Dashboard React - v1.3.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2018 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(0, 0, 0, 0.87)\",\n  background: \"#fff\"\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primeColor = \"#3949AB\";\nconst mintColor = \"#00BFA5\";\nconst primaryColor = \"#9c27b0\";\nconst warningColor = \"#ff9800\";\nconst dangerColor = \"#f44336\";\nconst successColor = \"#4caf50\";\nconst infoColor = \"#00acc1\";\nconst roseColor = \"#e91e63\";\nconst grayColor = \"#999999\";\n\nconst primeBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(57, 77, 171, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(57, 77, 171, 0.2)\"\n};\nconst mintBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.14), 0 4px 20px 0px rgba(0, 188, 212, 0.2), 0 7px 8px -5px rgba(0, 188, 212, 0.12)\"\n};\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(0, 188, 212, 0.2)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2)\"\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 12px 20px -10px rgba(244, 67, 54, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(244, 67, 54, 0.2)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(233, 30, 99, 0.4)\"\n};\n\nconst primeCardHeader = {\n  background: \"linear-gradient(60deg, #3949AB, #5C6BC0)\",\n  ...primeBoxShadow\n};\nconst mintCardHeader = {\n  background: \"linear-gradient(60deg, #00BFA5, #68EFAD)\",\n  ...mintBoxShadow\n};\nconst warningCardHeader = {\n  background: \"linear-gradient(60deg, #ffa726, #fb8c00)\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background: \"linear-gradient(60deg, #ef5350, #e53935)\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background: \"linear-gradient(60deg, #26c6da, #00acc1)\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background: \"linear-gradient(60deg, #ab47bc, #8e24aa)\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background: \"linear-gradient(60deg, #ec407a, #d81b60)\",\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid #eeeeee\",\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n  color: \"#3C4858\",\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: \"#777\",\n    fontSize: \"65%\",\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nexport {\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primeColor, mintColor,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  primeBoxShadow, mintBoxShadow,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  primeCardHeader, mintCardHeader,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\nimport {\n  primeCardHeader, mintCardHeader,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n} from '../../../assets/material-dashboard-react.jsx';\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: \"#FFFFFF\"\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$primeCardHeader,&$mintCardHeader,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  primeCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...primeCardHeader\n    }\n  },\n  mintCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...mintCardHeader\n    }\n  },\n  warningCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: \"#FFFFFF\",\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nfunction CardHeader({ ...props }) {\n  const {\n    classes,\n    className,\n    children,\n    color,\n    plain,\n    stats,\n    icon,\n    ...rest\n  } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"prime\",\n    \"mint\",\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool\n};\n\nexport default withStyles(cardHeaderStyle)(CardHeader);\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\n\n\nconst cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nfunction CardBody({ ...props }) {\n  const { classes, className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool\n};\n\nexport default withStyles(cardBodyStyle)(CardBody);\n","import React, {Component} from \"react\";\nimport {ResponsivePie} from 'nivo';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from \"../../tools/Card/CardBody\";\nimport Card from \"../../tools/Card/Card\";\n\nexport default class NivoPie extends Component {\n    constructor(props) {\n        super(props);\n        //let today = new Date();\n\n        // // Retrieve local store\n        // let yakPak = toolbox.retrievePak();\n        // let toDate = new Date(yakPak.DateFrame.To);\n        //\n        // let tempLabels = [];\n        //\n        // // Generate date labels starting with 'toDate' and iterating back through length of data\n        // for (let i = 0; i < this.props.chartCallData.length; i++) {\n        //     // parse date for how many days prior\n        //     let temp = new Date();\n        //     temp.setDate(toDate.getDate() - i);\n        //     tempLabels.unshift((toDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n        // }\n\n        this.state = {\n            chartData: [\n                {\n                    \"id\": \"Direct\",\n                    \"label\": \"Direct\",\n                    \"value\": 425,\n                    \"color\": \"hsl(41, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Email\",\n                    \"label\": \"Email\",\n                    \"value\": 180,\n                    \"color\": \"hsl(215, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Organic\",\n                    \"label\": \"Organic\",\n                    \"value\": 539,\n                    \"color\": \"hsl(177, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Paid Advertising\",\n                    \"label\": \"Paid Advertising\",\n                    \"value\": 292,\n                    \"color\": \"hsl(110, 70%, 50%)\"\n                },\n                {\n                    \"id\": \"Referring\",\n                    \"label\": \"Referring\",\n                    \"value\": 317,\n                    \"color\": \"hsl(135, 70%, 50%)\"\n                }\n            ]\n        }\n    }\n\n    render() {\n        let nivoData = this.state.chartData;\n        let propsColor = this.props.color;\n        let title = this.props.title;\n\n        return (\n            <Card className=\"nivoCard\" style={{width: '45%'}}>\n                <CardHeader color={propsColor}>\n                    <h4 className=\"nivoCardTitle\">{title}</h4>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"nivoGraph\">\n                        <ResponsivePie\n                            data={nivoData}\n                            margin={{\n                                \"top\": 40,\n                                \"right\": 80,\n                                \"bottom\": 80,\n                                \"left\": 80\n                            }}\n                            innerRadius={0.5}\n                            padAngle={0.7}\n                            cornerRadius={3}\n                            colors=\"set1\"\n                            colorBy=\"id\"\n                            borderWidth={1}\n                            borderColor=\"inherit:darker(0.2)\"\n                            radialLabelsSkipAngle={10}\n                            radialLabelsTextXOffset={6}\n                            radialLabelsTextColor=\"#333333\"\n                            radialLabelsLinkOffset={0}\n                            radialLabelsLinkDiagonalLength={16}\n                            radialLabelsLinkHorizontalLength={24}\n                            radialLabelsLinkStrokeWidth={1}\n                            radialLabelsLinkColor=\"inherit\"\n                            slicesLabelsSkipAngle={10}\n                            slicesLabelsTextColor=\"#333333\"\n                            animate={true}\n                            motionStiffness={90}\n                            motionDamping={15}\n                            legends={[\n                                {\n                                    \"anchor\": \"bottom\",\n                                    \"direction\": \"row\",\n                                    \"translateY\": 56,\n                                    \"itemWidth\": 100,\n                                    \"itemHeight\": 18,\n                                    \"itemTextColor\": \"#999\",\n                                    \"symbolSize\": 18,\n                                    \"symbolShape\": \"circle\",\n                                    \"effects\": [\n                                        {\n                                            \"on\": \"hover\",\n                                            \"style\": {\n                                                \"itemTextColor\": \"#000\"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]}\n                        />\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport toolbox from \"../../tools/toolbox\";\nimport moment from 'moment';\nimport Button from \"@material-ui/core/Button/Button\";\n\nexport class LineChart extends Component {\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        let toDate = new Date(yakPak.DateFrame.To);\n        let startDay = moment(yakPak.DateFrame.From);\n        let endDay = moment(yakPak.DateFrame.To);\n        let numbDays = endDay.diff(startDay, 'days');\n\n        let primaryLabels = [];\n        let temp = moment(toDate);\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        for (let i = -1; i < numbDays; i++) {\n            // parse date for how many days prior\n            primaryLabels.unshift(moment(temp).subtract(i, 'd').format('M/D'));\n        }\n\n        this.state = {\n            chartData: {\n                labels: primaryLabels,\n                datasets: [\n                    {\n                        label: \"Directories\",\n                        backgroundColor: 'rgb(78,175,74)',\n                        borderColor: '#4EAF4A',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],  // chart data comes from props in domain-card\n                        stack: 1,\n                    },\n                    {\n                        label: \"Internal Directories\",\n                        backgroundColor: '#377EB8',\n                        borderColor: '#377EB8',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Lead Gen\",\n                        backgroundColor: '#FF6F00',\n                        borderColor: '#FF6F00',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Other\",\n                        backgroundColor: '#AF1B3F',\n                        borderColor: '#AF1B3F',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Placement\",\n                        backgroundColor: '#963484',\n                        borderColor: '#963484',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search\",\n                        backgroundColor: '#FFD600',\n                        borderColor: '#FFD600',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search Engine\",\n                        backgroundColor: '#73FBD3',\n                        borderColor: '#73FBD3',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sign Up\",\n                        backgroundColor: '#80A1C1',\n                        borderColor: '#80A1C1',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Social\",\n                        backgroundColor: '#FF4081',\n                        borderColor: '#FF4081',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sponsorship\",\n                        backgroundColor: '#B388FF',\n                        borderColor: '#B388FF',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Directories\",\n                        backgroundColor: 'rgb(78,175,74, 0.2)',\n                        borderColor: 'rgb(78,175,74, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Internal Directories\",\n                        backgroundColor: 'rgb(55,126,184, 0.2)',\n                        borderColor: 'rgb(55,126,184, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Lead Gen\",\n                        backgroundColor: 'rgb(255,111,0, 0.2)',\n                        borderColor: 'rgb(255,111,0, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Other\",\n                        backgroundColor: 'rgb(175,27,63, 0.2)',\n                        borderColor: 'rgb(175,27,63, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Placement\",\n                        backgroundColor: 'rgb(150,52,132, 0.2)',\n                        borderColor: 'rgb(150,52,132, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Search\",\n                        backgroundColor: 'rgb(128,161,193, 0.2)',\n                        borderColor: 'rgb(128,161,193, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Search Engine\",\n                        backgroundColor: 'rgb(255,214,0, 0.2)',\n                        borderColor: 'rgb(255,214,0, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Sign Up\",\n                        backgroundColor: 'rgb(115,251,211, 0.2)',\n                        borderColor: 'rgb(115,251,211, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Social\",\n                        backgroundColor: 'rgb(255,64,129, 0.2)',\n                        borderColor: 'rgb(255,64,129, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Sponsorship\",\n                        backgroundColor: 'rgb(179,136,255, 0.2)',\n                        borderColor: 'rgb(179,136,255, 0.4)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        data: [125, 140, 130, 160, 110, 150, 140, 120],\n                        type: 'line',\n                        label: 'Calls',\n                        fill: false,\n                        backgroundColor: \"#fff\",\n                        borderColor: \"#737373\",\n                        borderCapStyle: 'butt',\n                        borderDash: [10, 10],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        lineTension: .3,\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderColor: \"#737373\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"#737373\",\n                        pointHoverBorderColor: \"#737373\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 4,\n                        pointHitRadius: 10\n                    },\n                ]\n            },\n            chartOptions: {\n                tooltips: {\n                    titleFontSize: 0,\n                    titleSpacing: 0,\n                    callbacks: {\n                        label: function(tooltipItem, data) {\n                            let label = data.datasets[tooltipItem.datasetIndex].label + ' ' +\n                                data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].pointLabel;\n                            return label + ': (' + tooltipItem.yLabel + ')';\n                        }\n                    }\n                },\n                //responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: !!this.props.chartOptions.xName,  // coercion to bool, true if it exists\n                            labelString: this.props.chartOptions.xName\n                        },\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series',\n                    }],\n                    yAxes: [{\n                        stacked: true,\n                        scaleLabel: {\n                            display: !!this.props.chartOptions.yName,  // coercion to bool, true if it exists\n                            labelString: this.props.chartOptions.yName\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    }]\n                }\n            }\n        };\n\n        this.calculateDateRange();\n    }\n\n    // Grab the current stored date frame and label chart data\n    calculateDateRange = () => {\n        let yakPak = toolbox.retrievePak();\n\n        // Check if we have comparison dates\n        if (yakPak.DateFrame.CompareFrom !== '' && yakPak.DateFrame.CompareTo !== '') {\n            let compareToDate = new Date(yakPak.DateFrame.CompareTo);\n            let compareStartDay = moment(yakPak.DateFrame.CompareFrom);\n            let compareEndDay = moment(yakPak.DateFrame.CompareTo);\n            let compareNumbDays = compareEndDay.diff(compareStartDay, 'days');\n\n            let tempLabels = [];\n\n            for (let i = -1; i < compareNumbDays; i++) {\n                // parse date for how many days prior\n                let temp = new Date();\n                temp.setDate(compareToDate.getDate() - i);\n                tempLabels.unshift((compareToDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n            }\n\n            // Populate data with comparison dates\n            this.populateData(this.state.chartData.labels, tempLabels);\n        } else {\n            this.populateData(this.state.chartData.labels);\n        }\n    };\n\n    // Pass in calculated date labels, assign them to\n    populateData = (dateLabels, compareLabels = null) => {\n        let tempObj = this.state.chartData;\n        let datasets = this.state.chartData.datasets.length;\n        console.log(datasets);\n\n        for (let i = 0; i < dateLabels.length; i++) {\n            for (let j = 0; j < datasets-1; j++) {\n                tempObj.datasets[j].data[i] = {\n                    \"x\": dateLabels[i],\n                    \"y\": Math.floor(Math.random() * Math.floor(20)),\n                    \"pointLabel\": dateLabels[i]\n                };\n            }\n            // tempObj.datasets[0].data[i] = {\n            //     \"x\": dateLabels[i],\n            //     \"y\": Math.floor(Math.random() * Math.floor(150)),\n            //     \"pointLabel\": dateLabels[i]\n            // };\n            //\n            // tempObj.datasets[1].data[i] = {\n            //     \"x\": dateLabels[i],\n            //     \"y\": Math.floor(Math.random() * Math.floor(400)),\n            //     \"pointLabel\": dateLabels[i]\n            // };\n        }\n\n        console.log(tempObj);\n\n\n        // if (compareLabels != null) {\n        //     let SecIndex = this.state.chartData.datasets.length+1;\n        //     tempObj.datasets[SecIndex] = {\n        //         label: \"SEC Call\",\n        //         backgroundColor: '#C6FF00',\n        //         borderColor: '#C6FF00',\n        //         borderWidth: 2,\n        //         fill: false,\n        //         data: [],\n        //         stack: 2,\n        //     };\n        //\n        //     for (let i = 0; i < dateLabels.length; i++) {\n        //         tempObj.datasets[SecIndex].data[i] = {\n        //             \"x\": dateLabels[i],\n        //             \"y\": compareLabels[i] == null ? 0 : Math.floor(Math.random() * Math.floor(20)),\n        //             \"pointLabel\": compareLabels[i] == null ? \"Out of Range\" : compareLabels[i]\n        //         };\n        //     }\n        // }\n\n        let dummyOptions = this.state.chartOptions;\n        // Set state with fresh data\n        this.setState({\n            chartData: tempObj,\n            chartOptions: dummyOptions,\n        });\n    };\n\n    convertToDay = () => {\n\n    };\n\n    convertToWeek = () => {\n        let yakPak = toolbox.retrievePak();\n        let toDate = moment(yakPak.DateFrame.To);\n        let startDay = moment(yakPak.DateFrame.From);\n        let numbWeeks = toDate.diff(startDay, 'week') +1;  // Add 1 because it doesn't count starting week\n        console.log('Weeks: '+ numbWeeks);\n    };\n\n    convertToMonth = () => {\n        let yakPak = toolbox.retrievePak();\n        let toDate = moment(yakPak.DateFrame.To);\n        let startDay = moment(yakPak.DateFrame.From);\n        let numbMonths = toDate.diff(startDay, 'month') +1;  // Add 1 because it doesn't count starting month\n        console.log('Months: '+ numbMonths);\n    };\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n                <div style={{paddingBottom: '20px', float: 'right'}}>\n                    <Button variant=\"outlined\" disabled color=\"secondary\">\n                        Day\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={this.convertToWeek}>\n                        Week\n                    </Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={this.convertToMonth}>\n                        Month\n                    </Button>\n                </div>\n                <Bar\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LineChart;","import React, {Component} from 'react';\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport NivoPie from \"./nivoPie\";\n//import moment from \"moment/moment\";\n//import MaterialIcon from 'material-icons-react';\nimport LineChart from './lineChart';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Conversion extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tabValue: this.props.parentState.Conversion.tabValue,\n        };\n    }\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"conversionComponent\">\n                <h3>Conversion</h3>\n                <Tabs\n                    value={this.state.tabValue}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={this.handleTabChange}\n                    style={{display: 'inline-block'}}\n                >\n                    <Tab label=\"Summary\"/>\n                    <Tab label=\"Tables\"/>\n                    <Tab label=\"Graphs\"/>\n                </Tabs>\n\n                {tabValue === 0 && <TabContainer>\n                    <NivoPie color={\"prime\"} title={\"First Touch Summary\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                    <NivoPie color={\"info\"} title={\"Converting Touch Summary\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                    <NivoPie color={\"primary\"} title={\"Contributing Touch Summary\"}\n                             chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                </TabContainer>}\n\n                {tabValue === 1 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className=\"cardTitleWhite\">Channel Performance</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n                            <Table\n                                tableHeaderColor=\"info\"\n                                tableHead={[\n                                    \"Network\",\n                                    \"Total 5min\",\n                                    \"Total Call\",\n                                    \"Total 5min + Call\",\n                                    \"Last Touch 5min\",\n                                    \"Last Touch Call\",\n                                    \"Last Touch 5min + Call\",\n                                    \"1st Touch 5min\",\n                                    \"1st Touch Call\",\n                                    \"1st Touch 5min + Call\"\n                                ]}\n                                tableData={[\n                                    [\"Search\", \"1001\", \"16\", \"7\", \"2\", \"5\", \"2\", \"5\", \"2\", \"5\"],\n                                    [\"Display\", \"777\", \"11\", \"17\", \"9\", \"4\", \"1\", \"9\", \"7\", \"3\"],\n                                    [\"Social\", \"263\", \"8\", \"15\", \"1\", \"3\", \"2\", \"5\", \"2\", \"0\"],\n                                ]}\n                            />\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n                {tabValue === 2 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"prime\">\n                            <h4 className=\"cardTitleWhite\">Conversions (Medium)</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n                            <LineChart chartOptions={{\n                                           dataLabel: 'Calls',\n                                           xName: 'Date',\n                                           yName: ''\n                                       }}/>\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Conversion);","import React, {Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport moment from \"moment\";\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass ConversionPath extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tabValue: this.props.parentState.Conversion.tabValue,\n            timeToShow: moment().subtract(1, 'month').format('MMMM'),\n            topPieData: {\n                labels: [\n                    '1st',\n                    '2nd',\n                    '3rd',\n                    '4th',\n                    '5th'\n                ],\n                datasets: [{\n                    backgroundColor: [\"#4EAF4A\", \"#377EB8\",\"#FF6F00\",\"#AF1B3F\",\"#963484\"],\n                    data: [72,39,25,16,4]\n                }],\n            },\n            topPieOptions: {\n                title: {\n                    display: true,\n                    text: 'Top 5 Paths'\n                }\n            },\n            botPieData: {\n                labels: [\n                    '1st',\n                    '2nd',\n                    '3rd',\n                    '4th',\n                    '5th'\n                ],\n                datasets: [{\n                    backgroundColor: [\"#4EAF4A\", \"#377EB8\",\"#FF6F00\",\"#AF1B3F\",\"#963484\"],\n                    data: [72,39,25,16,4]\n                }],\n            },\n            botPieOptions: {\n                title: {\n                    display: true,\n                    text: 'Worst 5 Paths'\n                }\n            },\n        };\n    }\n\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const timeFrameToShow = this.state.timeToShow;\n\n        return (\n            <div className=\"conversionComponent\">\n                <h3>Conversion Path</h3>\n                <Card>\n                    <CardHeader color=\"mint\">\n                        <h4 className=\"cardTitleWhite\">Top 5 Channel Paths - {timeFrameToShow}</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <Table\n                            tableHeaderColor=\"success\"\n                            tableHead={[\n                                \"\",\n                                \"First Touch\",\n                                \"Middle Touch\",\n                                \"Converting Touch\",\n                                \"\",\n                                \"Conversion Total\"\n                            ]}\n                            tableData={[\n                                [\"1st\", \"Organic - Google\", \"Direct\", \"Email\", \"=\", \"72\"],\n                                [\"2nd\", \"Referring\", \"Referring - Internal\", \"Referring - Other\", \"=\", \"39\"],\n                                [\"3rd\", \"Paid Advertising\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"25\"],\n                                [\"4th\", \"Organic - Pinterest\", \"Email\", \"Direct\", \"=\", \"16\"],\n                                [\"5th\", \"Direct\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"4\"],\n                            ]}\n                        />\n                        <Doughnut\n                            data={this.state.topPieData}\n                            options={this.state.topPieOptions}\n                        />\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardHeader color=\"danger\">\n                        <h4 className=\"cardTitleWhite\">Bottom 5 Channel Paths - {timeFrameToShow}</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <Table\n                            tableHeaderColor=\"danger\"\n                            tableHead={[\n                                \"\",\n                                \"First Touch\",\n                                \"Middle Touch\",\n                                \"Converting Touch\",\n                                \"\",\n                                \"Conversion Total\"\n                            ]}\n                            tableData={[\n                                [\"1st\", \"Organic - Google\", \"Direct\", \"Email\", \"=\", \"-72\"],\n                                [\"2nd\", \"Referring\", \"Referring - Internal\", \"Referring - Other\", \"=\", \"-39\"],\n                                [\"3rd\", \"Paid Advertising\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"-25\"],\n                                [\"4th\", \"Organic - Pinterest\", \"Email\", \"Direct\", \"=\", \"-16\"],\n                                [\"5th\", \"Direct\", \"Organic - Other\", \"Email - Lead Gen\", \"=\", \"-4\"],\n                            ]}\n                        />\n                        <Doughnut\n                            data={this.state.botPieData}\n                            options={this.state.botPieOptions}\n                        />\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(ConversionPath);","import React from 'react';\nimport moment from 'moment';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from '../../tools/table.js';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport MaterialIcon from 'material-icons-react';\n\n\nconst styles = {\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\"\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\"\n      }\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\"\n      }\n    }\n  };\n\nfunction ExportsTable(props) {\n    const { classes } = props;\n    return (\n        <div>\n            <Card>\n                <CardHeader color=\"mint\">\n                    <h4 className={classes.cardTitleWhite}>Export Status</h4>\n                </CardHeader>\n                <CardBody>\n                    <Table\n                    tableHeaderColor=\"primary\"\n                    tableHead={[\"Export Name\", \"\", \"Facility\", \"Options\", \"Email\", \"Time\"]}\n                    tableData={[\n                        [\"Bayside-Direct (5/1-5/31)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"Bayside Marin\", \"Direct,All,Google\", \"jon.snow@acadiahealthcare.com\", moment().format(\"lll\")],\n                        [\"All-Email-Other (6/19-6/20)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"All Facilities\", \"Email,Lead Gen,Other\", \"tyrion.lannister@acadiahealthcare.com\", moment().format(\"lll\")],\n                        [\"All-LinkedIn (6/10-6/17)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"All Facilities\", \"Organic,Social,LinkedIn\", \"little.finger@acadiahealthcare.com\", moment().format(\"lll\")],\n                        [\"Galax-PaidAd (5/1-7/1)\", <MaterialIcon icon='cloud_download' color='#00C853' />, \"Galax\", \"PaidAd,All,GDN\", \"eddard.stark@acadiahealthcare.com\", moment().format(\"lll\")],\n                    ]}\n                    />\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(ExportsTable);\n","import React, {Component} from 'react';\nimport ExportsTable from './exportsTable';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from '../../tools/Card/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst styles = {\n    card: {\n        minWidth: 575,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    formControl: {\n        margin: '5px',\n        minWidth: 240,\n    },\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    }\n};\n\nclass Export extends Component {\n\n    state = {\n        exportName: 'Sample Export',\n        exportEmail: 'sample@placeholder.com',\n        recurrence: '',\n        columns: [],\n        multiline: 'Controlled',\n        facility: [],\n        touch: '',\n        channel: '',\n        medium: '',\n        source: '',\n        disorderDetail: '',\n        targeting: '',\n        notes: '',\n        priority: '',\n        trigger: '',\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleSelect = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {classes} = this.props;\n        const currentExports = {};\n\n        return (\n            <div className=\"exportComponent\">\n                <h3>Export</h3>\n\n                <Card>\n                    <CardHeader color=\"mint\">\n                        <h4 className={classes.cardTitleWhite}>Start New Export</h4>\n                        <p className={classes.cardCategoryWhite}>Select options for export.</p>\n                    </CardHeader>\n                    <CardContent>\n\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"exportName\"\n                                    label=\"Export Name\"\n                                    className={classes.textField}\n                                    value={this.state.exportName}\n                                    onChange={this.handleChange('exportName')}\n                                    margin=\"normal\"\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"exportEmail\"\n                                    label=\"Your Email\"\n                                    className={classes.textField}\n                                    value={this.state.exportEmail}\n                                    onChange={this.handleChange('exportEmail')}\n                                    margin=\"normal\"\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"recurrence\">Recurrence</InputLabel>\n                                <Select\n                                    value={this.state.recurrence}\n                                    onChange={this.handleSelect}\n                                    label=\"Recurrence\"\n                                    inputProps={{\n                                        name: 'recurrence',\n                                        id: 'recurrence',\n                                    }}\n                                    autoWidth\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    <MenuItem value={'weekly'}>Weekly</MenuItem>\n                                    <MenuItem value={'monthly'}>Monthly</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <br/>\n\n                            <FormControl className={classes.formControl} style={{width: '80%'}}>\n                                <InputLabel htmlFor=\"columns\">Columns</InputLabel>\n                                <Select\n                                    multiple\n                                    value={this.state.columns}\n                                    onChange={this.handleSelect}\n                                    label=\"Columns\"\n                                    inputProps={{\n                                        name: 'columns',\n                                        id: 'columns',\n                                    }}\n                                    autoWidth\n                                >\n                                    <MenuItem value={'ip'}>IP</MenuItem>\n                                    <MenuItem value={'session'}>Session</MenuItem>\n                                    <MenuItem value={'passport'}>Passport</MenuItem>\n                                    <MenuItem value={'phone'}>Phone</MenuItem>\n                                    <MenuItem value={'datetime'}>Datetime</MenuItem>\n                                    <MenuItem value={'geo'}>Geo</MenuItem>\n                                    <MenuItem value={'sku'}>SKU</MenuItem>\n                                    <MenuItem value={'url'}>URL</MenuItem>\n                                    <MenuItem value={'touch'}>Touch</MenuItem>\n                                    <MenuItem value={'referrer'}>Referrer</MenuItem>\n                                    <MenuItem value={'source'}>Source</MenuItem>\n                                    <MenuItem value={'medium'}>Medium</MenuItem>\n                                    <MenuItem value={'facility'}>Facility</MenuItem>\n                                    <MenuItem value={'facilityType'}>Facility Type</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                            <br/>\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"facility\">Facility</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*multiple*/}\n                                    {/*value={this.state.facility}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*label=\"Facility\"*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'facility',*/}\n                                        {/*id: 'facility',*/}\n                                    {/*}}*/}\n                                    {/*autoWidth*/}\n                                {/*>*/}\n                                    {/*<MenuItem value={'all'}>*/}\n                                        {/*<em>All</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'baysideMarin'}>Bayside Marin</MenuItem>*/}\n                                    {/*<MenuItem value={'acadiana'}>Acadiana</MenuItem>*/}\n                                    {/*<MenuItem value={'galax'}>Galax</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"touch\">Touch</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.touch}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*label=\"Touch\"*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'touch',*/}\n                                        {/*id: 'touch',*/}\n                                    {/*}}*/}\n                                    {/*autoWidth*/}\n                                {/*>*/}\n                                    {/*<MenuItem value=\"any\">*/}\n                                        {/*<em>Any</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'first'}>First</MenuItem>*/}\n                                    {/*<MenuItem value={'last'}>Last</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<br/>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"channel\">Channel</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.channel}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*label=\"Channel\"*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'channel',*/}\n                                        {/*id: 'channel',*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*<MenuItem value={'all'}><em>All</em></MenuItem>*/}\n                                    {/*<MenuItem value={\"direct\"}>Direct</MenuItem>*/}\n                                    {/*<MenuItem value={'email'}>Email</MenuItem>*/}\n                                    {/*<MenuItem value={'organic'}>Organic</MenuItem>*/}\n                                    {/*<MenuItem value={'paid-advertising'}>Paid Advertising</MenuItem>*/}\n                                    {/*<MenuItem value={'referring'}>Referring</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"medium\">Medium</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.medium}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'medium',*/}\n                                        {/*id: 'medium',*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*<MenuItem value=\"\">*/}\n                                        {/*<em>None</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'all'}>All</MenuItem>*/}\n                                    {/*<MenuItem value={'directories'}>Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'internal-directories'}>Internal Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'lead-gen'}>Lead Gen</MenuItem>*/}\n                                    {/*<MenuItem value={'other'}>Other</MenuItem>*/}\n                                    {/*<MenuItem value={'placement'}>Placement</MenuItem>*/}\n                                    {/*<MenuItem value={'search'}>Search</MenuItem>*/}\n                                    {/*<MenuItem value={'search-engines'}>Search Engines</MenuItem>*/}\n                                    {/*<MenuItem value={'sign-up'}>Sign Up</MenuItem>*/}\n                                    {/*<MenuItem value={'social'}>Social</MenuItem>*/}\n                                    {/*<MenuItem value={'sponsorship'}>Sponsorship</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                            {/*<FormControl className={classes.formControl}>*/}\n                                {/*<InputLabel htmlFor=\"source\">Source</InputLabel>*/}\n                                {/*<Select*/}\n                                    {/*value={this.state.source}*/}\n                                    {/*onChange={this.handleSelect}*/}\n                                    {/*inputProps={{*/}\n                                        {/*name: 'source',*/}\n                                        {/*id: 'source',*/}\n                                    {/*}}*/}\n                                {/*>*/}\n                                    {/*<MenuItem value=\"\">*/}\n                                        {/*<em>None</em>*/}\n                                    {/*</MenuItem>*/}\n                                    {/*<MenuItem value={'all'}>All</MenuItem>*/}\n                                    {/*<MenuItem value={'directories'}>Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'internal-directories'}>Internal Directories</MenuItem>*/}\n                                    {/*<MenuItem value={'lead-gen'}>Lead Gen</MenuItem>*/}\n                                    {/*<MenuItem value={'other'}>Other</MenuItem>*/}\n                                    {/*<MenuItem value={'placement'}>Placement</MenuItem>*/}\n                                    {/*<MenuItem value={'search'}>Search</MenuItem>*/}\n                                    {/*<MenuItem value={'search-engines'}>Search Engines</MenuItem>*/}\n                                    {/*<MenuItem value={'sign-up'}>Sign Up</MenuItem>*/}\n                                    {/*<MenuItem value={'social'}>Social</MenuItem>*/}\n                                    {/*<MenuItem value={'sponsorship'}>Sponsorship</MenuItem>*/}\n                                {/*</Select>*/}\n                            {/*</FormControl>*/}\n\n                        </form>\n\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.checkedB}\n                                    onChange={this.handleChange('checkedB')}\n                                    value=\"checkedB\"\n                                    color=\"secondary\"\n                                />\n                            }\n                            label=\"Use current filters\"\n                        />\n\n                    </CardContent>\n\n                    <CardActions style={{display: 'block'}}>\n                        <Button variant=\"contained\" color=\"primary\" style={{backgroundColor: '#00C853', color: '#ffffff'}} className=\"\">\n                            Start\n                        </Button>\n                    </CardActions>\n                </Card>\n                <br/>\n                <ExportsTable data={currentExports}/>\n            </div>\n        )\n    }\n}\n\nExport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Export);","import React, {Component} from 'react';\n\nexport default class Settings extends Component {\n\n    render() {\n        return (\n            <div className=\"settingsComponent\">\n                <h3>Settings Component</h3>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Button from \"@material-ui/core/Button/Button\";\n\n\nexport default class Builder extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n\n        this.state = {\n            Columns: this.props.parentState.Builder.Columns != null ? this.props.parentState.Builder.Columns : [],\n            Rows: [\n                {\n                    id: 1,\n                    name: 'Row Data'\n                },\n                {\n                    id: 2,\n                    name: 'Row Data'\n                },\n                {\n                    id: 3,\n                    name: 'Row Data'\n                },\n                {\n                    id: 4,\n                    name: 'Row Data'\n                }\n            ],\n        }\n    }\n\n    handleColumnSelect = name => event => {\n\n        this.setState({\n            Columns: event.target.value\n        });\n\n        // send update to main state\n        this.props.updateDash({\n            Columns: event.target.value\n        });\n    };\n\n    render() {\n        let rows = this.state.Rows;\n        let columns = this.state.Columns;\n\n        return (\n            <div className=\"builderComponent\">\n                <h3>Builder</h3>\n                <ExpansionPanel style={{width: '90%', margin: 'auto', borderRadius: '4px'}}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                        <Typography>Control Panel</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails style={{display: 'inline-block'}}>\n                        <FormControl className=\"\">\n                            <InputLabel htmlFor=\"columnSelect\">Columns</InputLabel>\n                            <Select\n                                className=\"skuFilterSelect\"\n                                multiple\n                                value={this.state.Columns}\n                                onChange={this.handleColumnSelect('Columns')}\n                                inputProps={{\n                                    name: 'columns',\n                                    id: 'columnSelect',\n                                }}\n                            >\n                                <MenuItem value={'Facility'}>Facility</MenuItem>\n                                <MenuItem value={'Facility_Type'}>Facility Type</MenuItem>\n                                <MenuItem value={'Domain'}>Domain</MenuItem>\n                                <MenuItem value={'IP'}>IP</MenuItem>\n                                <MenuItem value={'Session'}>Session</MenuItem>\n                                <MenuItem value={'Passport'}>Passport</MenuItem>\n                                <MenuItem value={'Phone_Number'}>Phone Number</MenuItem>\n                                <MenuItem value={'Conversions'}>Conversions</MenuItem>\n                                <MenuItem value={'Conversion_Type'}>Conversion Type</MenuItem>\n                                <MenuItem value={'TOS'}>TOS</MenuItem>\n                                <MenuItem value={'Pageviews'}>Pageviews</MenuItem>\n                            </Select>\n                            <br/>\n                            <Button variant=\"contained\"\n                                    style={{backgroundColor: '#00C853', color: '#ffffff', margin: 'auto'}}>\n                                Pull\n                            </Button>\n                        </FormControl>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n\n                <br/>\n\n                <Paper style={{width: '90%', margin: 'auto'}}>\n                    <Table className=\"cardTable\">\n                        <TableHead>\n                            <TableRow>\n                                {columns.map(col => {\n                                    return (\n                                        <TableCell key={col}>{col}</TableCell>\n                                    );\n                                })}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map(row => {\n                                return (\n                                    <TableRow key={row.id}>\n                                        {columns.map(col => {\n                                            return (\n                                                <TableCell key={col}>{row.id} data for {col}</TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from \"../../tools/Card/CardBody\";\nimport Table from \"../../tools/table\";\nimport Card from \"../../tools/Card/Card\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Grid from '@material-ui/core/Grid';\nimport MaterialIcon from \"material-icons-react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nclass Stalker extends Component {\n\n    state = {\n        searchMetric: \"passport\",\n        user: \"\",\n    };\n\n    componentDidMount() {\n        let id = 0;\n\n        this.setState({\n            user: id\n        })\n    }\n\n    // update search metric selection\n    handleSelect = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render() {\n        const {match} = this.props;\n        const id = match.params.id;\n\n        return (\n            <div className=\"stalkerComponent\">\n                <h3>{id}</h3>\n                <form className=\"\" noValidate autoComplete=\"off\">\n                    <FormControl style={{width: '120px', paddingRight: '8px'}} className=\"\">\n                        <InputLabel htmlFor=\"filterSearchMetric\">Search Metric</InputLabel>\n                        <Select\n                            className=\"skuFilterSelect\"\n                            value={this.state.searchMetric}\n                            onChange={this.handleSelect}\n                            inputProps={{\n                                name: 'searchMetric',\n                                id: 'filterSearchMetric',\n                            }}\n                        >\n                            <MenuItem value={'ip'}>IP</MenuItem>\n                            <MenuItem value={'phone'}>Phone</MenuItem>\n                            <MenuItem value={'passport'}>Passport</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id=\"search\"\n                        label=\"Search IP/Phone/Passport\"\n                        type=\"search\"\n                        className=\"\"\n                        margin=\"dense\"\n                        style={{width: \"400px\"}}\n                    />\n                </form>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <Card>\n                            <CardHeader color=\"info\">\n                                <h4 className=\"cardTitleWhite\">User Info</h4>\n                            </CardHeader>\n                            <CardBody className=\"cardTable\">\n                                <Grid container>\n                                    <Grid item xs={12} md={6}>\n                                        <List>\n                                            <ListItem>\n                                                <MaterialIcon icon='fingerprint'/>\n                                                <ListItemText\n                                                    primary=\"7DZ04BUIMV\"\n                                                    secondary='Passport ID'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='phone'/>\n                                                <ListItemText\n                                                    primary=\"555-555-5555\"\n                                                    secondary='Phone'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='person'/>\n                                                <ListItemText\n                                                    primary=\"Bill\"\n                                                    secondary='Name'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='public'/>\n                                                <ListItemText\n                                                    primary=\"N/A\"\n                                                    secondary='Geo'\n                                                />\n                                            </ListItem>\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                            </CardBody>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card>\n                            <CardHeader color=\"info\">\n                                <h4 className=\"cardTitleWhite\">User Metrics</h4>\n                            </CardHeader>\n                            <CardBody className=\"cardTable\">\n                                <Grid container>\n                                    <Grid item xs={12} md={6}>\n                                        <List>\n                                            <ListItem>\n                                                <MaterialIcon icon='phone_callback'/>\n                                                <ListItemText\n                                                    primary=\"1\"\n                                                    secondary='# of Calls'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='flag'/>\n                                                <ListItemText\n                                                    primary=\"5\"\n                                                    secondary='# of Actions'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='visibility'/>\n                                                <ListItemText\n                                                    primary=\"09/09/18\"\n                                                    secondary='First Encounter'\n                                                />\n                                            </ListItem>\n                                            <ListItem>\n                                                <MaterialIcon icon='visibility_off'/>\n                                                <ListItemText\n                                                    primary=\"09/13/18\"\n                                                    secondary='Final Encounter'\n                                                />\n                                            </ListItem>\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                            </CardBody>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Card>\n                    <CardHeader color=\"prime\">\n                        <h4 className=\"cardTitleWhite\">User Action Trail</h4>\n                    </CardHeader>\n                    <CardBody className=\"cardTable\">\n                        <Table\n                            tableHeaderColor=\"prime\"\n                            tableHead={[\n                                \"Session ID\",\n                                \"Date\",\n                                \"Channel\",\n                                \"Touch\",\n                                \"Call?\",\n                                \"Domain\",\n                                \"URL\",\n                                \"T.O.P.\",\n                            ]}\n                            tableData={[\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"First\", \"no\", \"timberlineknolls.com\", \"/admissions\", \"2m\"],\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"Contributing\", \"no\", \"timberlineknolls.com\", \"/depression\", \"6m\"],\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"Contributing\", \"no\", \"timberlineknolls.com\", \"/admissions/criteria\", \"2m\"],\n                                [\"f34r4fvh5\", \"09/09/18\", \"Organic - Google\", \"Conversion\", \"yes\", \"timberlineknolls.com\", \"/programs\", \"3m\"],\n                                [\"yui1sh965\", \"09/13/18\", \"Email - Other\", \"Final\", \"no\", \"burkwoodtreatmentcenter.com\", \"/lp\", \"5m\"],\n                            ]}\n                        />\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Stalker);","import React, {Component} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Builder from \"./Builder\";\nimport Stalker from './Stalker';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Explorer extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n    }\n\n    state = {\n        tabValue: this.props.parentState.Explorer.tabValue,\n    };\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    // For child elements to update dash state\n    updateDashBuilder = (val) => {\n        this.setState({\n            Builder: val\n        });\n    };\n\n    render() {\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"explorerComponent\">\n                <h3>Explorer</h3>\n\n                <Tabs\n                    value={this.state.tabValue}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={this.handleTabChange}\n                    style={{display: 'inline-block'}}\n                    centered\n                >\n                    <Tab label=\"Deep Dive\"/>\n                    <Tab label=\"Stalker\"/>\n                    <Tab label=\"Builder\"/>\n                </Tabs>\n\n                {tabValue === 0 && <TabContainer>\n\n                </TabContainer>}\n\n                {tabValue === 1 && <TabContainer>\n                    <Stalker/>\n                </TabContainer>}\n\n                {tabValue === 2 && <TabContainer>\n\n                    <Builder parentState={this.props.parentState} updateDash={this.updateDashBuilder}/>\n                </TabContainer>}\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Explorer);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MaterialIcon from \"material-icons-react\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Drawer from '@material-ui/core/Drawer';\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nclass DateComponent extends React.Component {\n\n    state = {\n        top: false,\n        dateDenomination: 'custom',\n        open: false,\n    };\n\n    // Updates the selected facility list\n    updateToDate = (val) => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: val\n        };\n\n        // Check if input To date is before current From date; adjust From date (-1) if so\n        if (val < this.props.dateFrame.From) {\n            dateFrame.From = moment(val).subtract(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    // Updates the selected facility list\n    updateFromDate = (val) => {\n        let dateFrame = {\n            From: val,\n            To: this.props.dateFrame.To\n        };\n\n        // Check if input From date is after current To date; adjust To date (+1) if so\n        if (val > this.props.dateFrame.To) {\n            dateFrame.To = moment(val).add(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    // Compare dates update for when month over month, w/w, etc. is selected\n    updateCompareToDate = (val) => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: this.props.dateFrame.To,\n            CompareFrom: this.props.dateFrame.CompareFrom,\n            CompareTo: val\n        };\n\n        // Check if input To date is before current From date; adjust From date (-1) if so\n        if (val < this.props.dateFrame.CompareFrom) {\n            dateFrame.CompareFrom = moment(val).subtract(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    updateCompareFromDate = (val) => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: this.props.dateFrame.To,\n            CompareFrom: val,\n            CompareTo: this.props.dateFrame.CompareTo\n        };\n\n        // Check if input From date is after current To date; adjust To date (+1) if so\n        if (val > this.props.dateFrame.CompareTo) {\n            dateFrame.CompareTo = moment(val).add(1, 'days').format('YYYY-MM-DD');\n        }\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n\n    // update date denomination\n    handleDateDenominationSelect = name => event => {\n        let dateDenom = event.target.value;\n\n        this.setState({\n            dateDenomination: dateDenom\n        });\n\n        // Initialize temp dates\n        let tempTo;\n        let tempFrom;\n\n        // Set values for temp dates based on input\n        switch (dateDenom) {\n            case 'today':\n                tempTo = moment();\n                tempFrom = moment();\n                break;\n            case 'yesterday':\n                tempTo = moment().subtract(1, 'days');\n                tempFrom = moment().subtract(1, 'days');\n                break;\n            case 'lastWeek':\n                tempTo = moment().subtract(1, 'weeks').endOf('week');\n                tempFrom = moment().subtract(1, 'weeks').startOf('week');\n                break;\n            case 'lastMonth':\n                tempTo = moment().subtract(1, 'months').endOf('month');\n                tempFrom = moment().subtract(1, 'months').startOf('month');\n                break;\n            case 'last7':\n                tempTo = moment();\n                tempFrom = moment().subtract(7, 'days');\n                break;\n            case 'last30':\n                tempTo = moment();\n                tempFrom = moment().subtract(30, 'days');\n                break;\n            default:\n                tempTo = moment(this.props.dateFrame.To);\n                tempFrom = moment(this.props.dateFrame.From);\n\n        }\n\n        let dateFrame = {\n            From: tempFrom.format('YYYY-MM-DD'),\n            To: tempTo.format('YYYY-MM-DD'),\n            CompareFrom: this.props.dateFrame.CompareFrom,\n            CompareTo: this.props.dateFrame.CompareTo\n        };\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    // Remove comparison date range\n    clearDates = () => {\n        let dateFrame = {\n            From: this.props.dateFrame.From,\n            To: this.props.dateFrame.To,\n            CompareFrom: '',\n            CompareTo: ''\n        };\n\n        // Push update to Dash state\n        this.props.onUpdate(dateFrame);\n    };\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        return (\n            <form className=\"datePicker\">\n\n                <Tooltip title=\"Select Dates\" placement=\"bottom\">\n                    <Button onClick={this.handleClickOpen} style={{top: '5px'}}>\n                        <MaterialIcon icon='date_range' size={26} color=''/>\n                        {moment(this.props.dateFrame.From).format('l')} - {moment(this.props.dateFrame.To).format('l')}\n                    </Button>\n                </Tooltip>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    style={{paddingLeft: '180px', top: '-20%'}}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Date Options</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText></DialogContentText>\n\n                        <FormGroup>\n                            <FormGroup row style={{margin: 'auto', padding: '10px 5px'}}>\n                                <FormControl style={{paddingRight: '20px'}}>\n                                    <InputLabel htmlFor=\"filterDateDenomination\">Presets</InputLabel>\n                                    <Select\n                                        className=\"skuFilterSelect\"\n                                        value={this.state.dateDenomination}\n                                        onChange={this.handleDateDenominationSelect('dateDenomination')}\n                                        inputProps={{\n                                            name: 'dateDenomination',\n                                            id: 'filterDateDenomination',\n                                        }}\n                                    >\n                                        <MenuItem value={'custom'}>Custom</MenuItem>\n                                        <MenuItem value={'today'}>Today</MenuItem>\n                                        <MenuItem value={'yesterday'}>Yesterday</MenuItem>\n                                        <MenuItem value={'lastWeek'}>Last Week</MenuItem>\n                                        <MenuItem value={'lastMonth'}>Last Month</MenuItem>\n                                        <MenuItem value={'last7'}>Last 7 Days</MenuItem>\n                                        <MenuItem value={'last30'}>Last 30 Days</MenuItem>\n                                    </Select>\n                                </FormControl>\n\n                                <Tooltip title=\"Primary Start Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateFrom\"\n                                        label=\"From\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.From}\n                                        onChange={(e) => this.updateFromDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                                <Tooltip title=\"Primary End Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateTo\"\n                                        label=\"To\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.To}\n                                        onChange={(e) => this.updateToDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                            </FormGroup>\n\n                            <FormGroup row style={{margin: 'auto', paddingTop: '20px'}}>\n                                <Tooltip title=\"Secondary Start Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateCompareFrom\"\n                                        label=\"SEC From\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.CompareFrom}\n                                        onChange={(e) => this.updateCompareFromDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                                <Tooltip title=\"Secondary End Date\" placement=\"bottom\">\n                                    <TextField\n                                        required={true}\n                                        id=\"dateCompareTo\"\n                                        label=\"SEC To\"\n                                        type=\"date\"\n                                        value={this.props.dateFrame.CompareTo}\n                                        onChange={(e) => this.updateCompareToDate(e.target.value)}\n                                        className=\"datePicker-textField\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Tooltip>\n                            </FormGroup>\n                        </FormGroup>\n                    </DialogContent>\n                    <DialogActions style={{padding: '10px'}}>\n                        <Button variant=\"contained\" color=\"primary\"\n                                style={{backgroundColor: '#00C853', color: '#ffffff', marginRight: '10px'}}\n                                onClick={() => {\n                                    this.props.refreshView();\n                                    this.handleClose();\n                                }}\n                        >\n                            Apply\n                        </Button>\n                        <Button variant=\"contained\" className=\"\" onClick={this.clearDates}>\n                            Clear\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Drawer anchor=\"top\" open={this.state.top} onClose={this.toggleDrawer('top', false)}>\n                    <div\n                        style={{padding: 20, textAlign: 'center'}}\n                        tabIndex={0}\n                        role=\"button\"\n                    >\n\n                    </div>\n                </Drawer>\n            </form>\n        );\n    }\n}\n\nexport default DateComponent;","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport toolbox from \"../../tools/toolbox\";\nimport moment from 'moment';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n\nexport class TouchChart extends Component {\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        let toDate = yakPak == null ? new Date() : new Date(yakPak.DateFrame.To);\n        let startDay = yakPak == null ? moment().add(-7, 'days') : moment(yakPak.DateFrame.From);\n        let endDay = yakPak == null ? moment() : moment(yakPak.DateFrame.To);\n        let numbDays = endDay.diff(startDay, 'days');\n\n        let primaryLabels = [];\n        let temp = moment(toDate);\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        for (let i = -1; i < numbDays; i++) {\n            // parse date for how many days prior\n            primaryLabels.unshift(moment(temp).subtract(i, 'd').format('M/D'));\n        }\n\n        this.state = {\n            touchMakeup: 'medium',\n            chartData: {\n                labels: primaryLabels,\n                datasets: [\n                    {\n                        label: \"Touch - Directories\",\n                        backgroundColor: 'rgb(78,175,74)',\n                        borderColor: '#4EAF4A',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],  // chart data comes from props in domain-card\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Internal Directories\",\n                        backgroundColor: '#377EB8',\n                        borderColor: '#377EB8',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Lead Gen\",\n                        backgroundColor: '#FF6F00',\n                        borderColor: '#FF6F00',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Other\",\n                        backgroundColor: '#AF1B3F',\n                        borderColor: '#AF1B3F',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Placement\",\n                        backgroundColor: '#963484',\n                        borderColor: '#963484',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Search\",\n                        backgroundColor: '#FFD600',\n                        borderColor: '#FFD600',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Search Engine\",\n                        backgroundColor: '#73FBD3',\n                        borderColor: '#73FBD3',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Sign Up\",\n                        backgroundColor: '#80A1C1',\n                        borderColor: '#80A1C1',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Social\",\n                        backgroundColor: '#FF4081',\n                        borderColor: '#FF4081',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Touch - Sponsorship\",\n                        backgroundColor: '#B388FF',\n                        borderColor: '#B388FF',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Conversion - Directories\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(78,175,74)',\n                        borderColor: 'rgb(78,175,74)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Internal Directories\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(55,126,184)',\n                        borderColor: 'rgb(55,126,184)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Lead Gen\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(255,111,0)',\n                        borderColor: 'rgb(255,111,0)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Other\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(175,27,63)',\n                        borderColor: 'rgb(175,27,63)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Placement\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(150,52,132)',\n                        borderColor: 'rgb(150,52,132)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Search\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(255,214,0)',\n                        borderColor: 'rgb(255,214,0)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Search Engine\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(115,251,211)',\n                        borderColor: 'rgb(115,251,211)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Sign Up\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(128,161,193)',\n                        borderColor: 'rgb(128,161,193)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Social\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(255,64,129)',\n                        borderColor: 'rgb(255,64,129)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                    {\n                        label: \"Conversion - Sponsorship\",\n                        yAxisID: 'b',\n                        backgroundColor: 'rgb(179,136,255)',\n                        borderColor: 'rgb(179,136,255)',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 2,\n                    },\n                ]\n            },\n            chartOptions: {\n                tooltips: {\n                    titleFontSize: 0,\n                    titleSpacing: 0,\n                    callbacks: {\n                        label: function (tooltipItem, data) {\n                            let label = data.datasets[tooltipItem.datasetIndex].label + ' ' +\n                                data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].pointLabel;\n                            return label + ': (' + tooltipItem.yLabel + ')';\n                        }\n                    }\n                },\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Date'\n                        },\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series',\n                    }],\n                    yAxes: [{\n                        id: 'a',\n                        weight: 2,\n                        position: 'left',\n                        stacked: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Touches'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                        },\n                        {\n                            id: 'b',\n                            weight: 1,\n                            stacked: true,\n                            position: 'right',\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Conversions'\n                            },\n                            ticks: {\n                                beginAtZero: true,\n                            }\n                        }\n                    ]\n                }\n            },\n        };\n    }\n\n    componentDidMount() {\n        // Wait for component to mount before loading in data\n        this.calculateDateRange();\n    }\n\n    // Grab the current stored date frame and label chart data\n    calculateDateRange = () => {\n        let yakPak = toolbox.retrievePak();\n\n        // Check if we have comparison dates\n        if (yakPak.DateFrame.CompareFrom !== '' && yakPak.DateFrame.CompareTo !== '') {\n            let compareToDate = new Date(yakPak.DateFrame.CompareTo);\n            let compareStartDay = moment(yakPak.DateFrame.CompareFrom);\n            let compareEndDay = moment(yakPak.DateFrame.CompareTo);\n            let compareNumbDays = compareEndDay.diff(compareStartDay, 'days');\n\n            let tempLabels = [];\n\n            for (let i = -1; i < compareNumbDays; i++) {\n                // parse date for how many days prior\n                let temp = new Date();\n                temp.setDate(compareToDate.getDate() - i);\n                tempLabels.unshift((compareToDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n            }\n\n            // Populate data with comparison dates\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        } else {\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        }\n    };\n\n    // Pass in calculated date labels, assign them to\n    populateData = (dateLabels, tempObj) => {\n        // Grab data from state if none passed in\n        if (tempObj == null) {\n            tempObj = this.state.chartData;\n        }\n        let datasets = tempObj.datasets.length;\n\n        console.log(datasets);\n\n        for (let i = 0; i < dateLabels.length; i++) {\n            for (let j = 0; j < datasets; j++) {\n                tempObj.datasets[j].data[i] = {\n                    \"x\": dateLabels[i],\n                    \"y\": Math.floor(Math.random() * Math.floor(20)),\n                    \"pointLabel\": dateLabels[i]\n                };\n            }\n        }\n\n        console.log(tempObj);\n\n        let dummyOptions = this.state.chartOptions;\n\n        // Set state with fresh data\n        //this.state.chartData = tempObj;\n        //this.state.chartOptions = dummyOptions;\n        this.setState({\n            chartData: tempObj,\n            chartOptions: dummyOptions,\n        });\n    };\n\n    // update touch makeup filter state\n    handleSelect = name => event => {\n        this.setState({\n            touchMakeup: event.target.value\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n                <div style={{paddingBottom: '20px', float: 'left'}}>\n                    <FormControl style={{width: '200px'}}>\n                        <InputLabel htmlFor=\"filterTouchMakeup\">Touch Makeup</InputLabel>\n                        <Select\n                            className=\"skuFilterSelect\"\n                            value={this.state.touchMakeup}\n                            onChange={this.handleSelect('touchMakeup')}\n                            inputProps={{\n                                name: 'touchMakeup',\n                                id: 'filterTouchMakeup',\n                            }}\n                        >\n                            <MenuItem value={'medium'}>Medium</MenuItem>\n                            <MenuItem value={'source'}>Source</MenuItem>\n                            <MenuItem value={'channel'}>Channel</MenuItem>\n                        </Select>\n                    </FormControl>\n                </div>\n                <Bar\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TouchChart;","import React, {Component} from 'react';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport TouchChart from './touchChart';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Touch extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n    }\n\n    state = {\n        tabValue: this.props.parentState.Touch.tabValue,\n\n    };\n\n    handleTabChange = (event, tabValue) => {\n        this.setState({tabValue});\n\n        this.props.updateDash('tabValue', tabValue);\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {tabValue} = this.state;\n\n        return (\n            <div className=\"touchComponent\">\n                <h3>Touch</h3>\n\n                <Tabs\n                    value={this.state.tabValue}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={this.handleTabChange}\n                    style={{display: 'inline-block'}}\n                >\n                    <Tab label=\"First\"/>\n                    <Tab label=\"Mid\"/>\n                    <Tab label=\"Last\"/>\n                </Tabs>\n\n                {tabValue === 0 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"primary\">\n                            <h4 className=\"cardTitleWhite\">First Touch v Conversion</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n                            <TouchChart/>\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n                {tabValue === 1 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className=\"cardTitleWhite\">Mid Touch</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n                {tabValue === 2 && <TabContainer>\n                    <Card>\n                        <CardHeader color=\"prime\">\n                            <h4 className=\"cardTitleWhite\">Last Touch</h4>\n                        </CardHeader>\n                        <CardBody className={classes.cardConversionTable}>\n\n                        </CardBody>\n                    </Card>\n                </TabContainer>}\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Touch);","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport toolbox from \"../../tools/toolbox\";\nimport moment from 'moment';\nimport Switch from '@material-ui/core/Switch';\n\n\nexport class LineChart extends Component {\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        let toDate = yakPak == null ? new Date() : new Date(yakPak.DateFrame.To);\n        let startDay = yakPak == null ? moment().add(-7, 'days') : moment(yakPak.DateFrame.From);\n        let endDay = yakPak == null ? moment() : moment(yakPak.DateFrame.To);\n        let numbDays = endDay.diff(startDay, 'days');\n\n        let primaryLabels = [];\n        let temp = moment(toDate);\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        for (let i = -1; i < numbDays; i++) {\n            // parse date for how many days prior\n            primaryLabels.unshift(moment(temp).subtract(i, 'd').format('M/D'));\n        }\n\n        this.state = {\n            showHistory: false,\n            chartData: {\n                labels: primaryLabels,\n                datasets: [\n                    {\n                        data: [],\n                        yAxisID: 'b',\n                        type: 'line',\n                        label: 'Conversions',\n                        fill: false,\n                        backgroundColor: \"#fff\",\n                        borderColor: \"#737373\",\n                        borderCapStyle: 'butt',\n                        borderDash: [10, 10],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        lineTension: .3,\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderColor: \"#737373\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"#737373\",\n                        pointHoverBorderColor: \"#737373\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 4,\n                        pointHitRadius: 10\n                    },\n                    {\n                        label: \"Directories\",\n                        backgroundColor: 'rgb(78,175,74)',\n                        borderColor: '#4EAF4A',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],  // chart data comes from props in domain-card\n                        stack: 1,\n                    },\n                    {\n                        label: \"Internal Directories\",\n                        backgroundColor: '#377EB8',\n                        borderColor: '#377EB8',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Lead Gen\",\n                        backgroundColor: '#FF6F00',\n                        borderColor: '#FF6F00',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Other\",\n                        backgroundColor: '#AF1B3F',\n                        borderColor: '#AF1B3F',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Placement\",\n                        backgroundColor: '#963484',\n                        borderColor: '#963484',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search\",\n                        backgroundColor: '#FFD600',\n                        borderColor: '#FFD600',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Search Engine\",\n                        backgroundColor: '#73FBD3',\n                        borderColor: '#73FBD3',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sign Up\",\n                        backgroundColor: '#80A1C1',\n                        borderColor: '#80A1C1',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Social\",\n                        backgroundColor: '#FF4081',\n                        borderColor: '#FF4081',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Sponsorship\",\n                        backgroundColor: '#B388FF',\n                        borderColor: '#B388FF',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                ]\n            },\n            chartOptions: {\n                tooltips: {\n                    titleFontSize: 0,\n                    titleSpacing: 0,\n                    callbacks: {\n                        label: function (tooltipItem, data) {\n                            let label = data.datasets[tooltipItem.datasetIndex].label + ' ' +\n                                data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].pointLabel;\n                            return label + ': (' + tooltipItem.yLabel + ')';\n                        }\n                    }\n                },\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Date'\n                        },\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series',\n                    }],\n                    yAxes: [{\n                        id: 'a',\n                        weight: 2,\n                        position: 'left',\n                        stacked: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Touches'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    },{\n                        id: 'b',\n                        weight: 1,\n                        stacked: false,\n                        position: 'right',\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Conversions'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    }]\n                }\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.calculateDateRange();\n    }\n\n    // Grab the current stored date frame and label chart data\n    calculateDateRange = () => {\n        let yakPak = toolbox.retrievePak();\n\n        // Check if we have comparison dates\n        if (yakPak.DateFrame.CompareFrom !== '' && yakPak.DateFrame.CompareTo !== '') {\n            let compareToDate = new Date(yakPak.DateFrame.CompareTo);\n            let compareStartDay = moment(yakPak.DateFrame.CompareFrom);\n            let compareEndDay = moment(yakPak.DateFrame.CompareTo);\n            let compareNumbDays = compareEndDay.diff(compareStartDay, 'days');\n\n            let tempLabels = [];\n\n            for (let i = -1; i < compareNumbDays; i++) {\n                // parse date for how many days prior\n                let temp = new Date();\n                temp.setDate(compareToDate.getDate() - i);\n                tempLabels.unshift((compareToDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n            }\n\n            // Populate data with comparison dates\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        } else {\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        }\n    };\n\n    // Pass in calculated date labels, assign them to\n    populateData = (dateLabels, tempObj) => {\n        // Grab data from state if none passed in\n        if (tempObj == null) {\n            tempObj = this.state.chartData;\n        }\n        let datasets = tempObj.datasets.length;\n\n        console.log(datasets);\n\n        for (let i = 0; i < dateLabels.length; i++) {\n            for (let j = 0; j < datasets; j++) {\n                tempObj.datasets[j].data[i] = {\n                    \"x\": dateLabels[i],\n                    \"y\": Math.floor(Math.random() * Math.floor(20)),\n                    \"pointLabel\": dateLabels[i]\n                };\n            }\n\n\n        }\n\n        console.log(tempObj);\n\n        let dummyOptions = this.state.chartOptions;\n        // Set state with fresh data\n        this.setState({\n            chartData: tempObj,\n            chartOptions: dummyOptions,\n        });\n    };\n\n    handleHistoryChange = name => event => {\n        let labels = this.state.chartData.labels;\n        console.log(event.target.checked);\n\n        let tempChartD = {};\n        if (event.target.checked) {\n                tempChartD = {\n                    labels: labels,\n                    datasets: [\n                        {\n                            data: [],\n                            yAxisID: 'b',\n                            type: 'line',\n                            label: 'Conversions',\n                            fill: false,\n                            backgroundColor: \"#fff\",\n                            borderColor: \"#737373\",\n                            borderCapStyle: 'butt',\n                            borderDash: [10, 10],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            lineTension: .3,\n                            pointBackgroundColor: \"#fff\",\n                            pointBorderColor: \"#737373\",\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: \"#737373\",\n                            pointHoverBorderColor: \"#737373\",\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 4,\n                            pointHitRadius: 10\n                        },\n                        {\n                            label: \"Directories\",\n                            backgroundColor: 'rgb(78,175,74)',\n                            borderColor: '#4EAF4A',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],  // chart data comes from props in domain-card\n                            stack: 1,\n                        },\n                        {\n                            label: \"Internal Directories\",\n                            backgroundColor: '#377EB8',\n                            borderColor: '#377EB8',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Lead Gen\",\n                            backgroundColor: '#FF6F00',\n                            borderColor: '#FF6F00',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Other\",\n                            backgroundColor: '#AF1B3F',\n                            borderColor: '#AF1B3F',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Placement\",\n                            backgroundColor: '#963484',\n                            borderColor: '#963484',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search\",\n                            backgroundColor: '#FFD600',\n                            borderColor: '#FFD600',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search Engine\",\n                            backgroundColor: '#73FBD3',\n                            borderColor: '#73FBD3',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sign Up\",\n                            backgroundColor: '#80A1C1',\n                            borderColor: '#80A1C1',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Social\",\n                            backgroundColor: '#FF4081',\n                            borderColor: '#FF4081',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sponsorship\",\n                            backgroundColor: '#B388FF',\n                            borderColor: '#B388FF',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"_Directories\",\n                            backgroundColor: 'rgb(78,175,74, 0.2)',\n                            borderColor: 'rgb(78,175,74, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Internal Directories\",\n                            backgroundColor: 'rgb(55,126,184, 0.2)',\n                            borderColor: 'rgb(55,126,184, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Lead Gen\",\n                            backgroundColor: 'rgb(255,111,0, 0.2)',\n                            borderColor: 'rgb(255,111,0, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Other\",\n                            backgroundColor: 'rgb(175,27,63, 0.2)',\n                            borderColor: 'rgb(175,27,63, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Placement\",\n                            backgroundColor: 'rgb(150,52,132, 0.2)',\n                            borderColor: 'rgb(150,52,132, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Search\",\n                            backgroundColor: 'rgb(255,214,0, 0.2)',\n                            borderColor: 'rgb(255,214,0, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Search Engine\",\n                            backgroundColor: 'rgb(115,251,211, 0.2)',\n                            borderColor: 'rgb(115,251,211, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Sign Up\",\n                            backgroundColor: 'rgb(128,161,193, 0.2)',\n                            borderColor: 'rgb(128,161,193, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Social\",\n                            backgroundColor: 'rgb(255,64,129, 0.2)',\n                            borderColor: 'rgb(255,64,129, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                        {\n                            label: \"_Sponsorship\",\n                            backgroundColor: 'rgb(179,136,255, 0.2)',\n                            borderColor: 'rgb(179,136,255, 0.4)',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 2,\n                        },\n                    ]\n                }\n        } else {\n                tempChartD = {\n                    labels: labels,\n                    datasets: [\n                        {\n                            data: [],\n                            yAxisID: 'b',\n                            type: 'line',\n                            label: 'Conversions',\n                            fill: false,\n                            backgroundColor: \"#fff\",\n                            borderColor: \"#737373\",\n                            borderCapStyle: 'butt',\n                            borderDash: [10, 10],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            lineTension: .3,\n                            pointBackgroundColor: \"#fff\",\n                            pointBorderColor: \"#737373\",\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: \"#737373\",\n                            pointHoverBorderColor: \"#737373\",\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 4,\n                            pointHitRadius: 10\n                        },\n                        {\n                            label: \"Directories\",\n                            backgroundColor: 'rgb(78,175,74)',\n                            borderColor: '#4EAF4A',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],  // chart data comes from props in domain-card\n                            stack: 1,\n                        },\n                        {\n                            label: \"Internal Directories\",\n                            backgroundColor: '#377EB8',\n                            borderColor: '#377EB8',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Lead Gen\",\n                            backgroundColor: '#FF6F00',\n                            borderColor: '#FF6F00',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Other\",\n                            backgroundColor: '#AF1B3F',\n                            borderColor: '#AF1B3F',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Placement\",\n                            backgroundColor: '#963484',\n                            borderColor: '#963484',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search\",\n                            backgroundColor: '#FFD600',\n                            borderColor: '#FFD600',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Search Engine\",\n                            backgroundColor: '#73FBD3',\n                            borderColor: '#73FBD3',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sign Up\",\n                            backgroundColor: '#80A1C1',\n                            borderColor: '#80A1C1',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Social\",\n                            backgroundColor: '#FF4081',\n                            borderColor: '#FF4081',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                        {\n                            label: \"Sponsorship\",\n                            backgroundColor: '#B388FF',\n                            borderColor: '#B388FF',\n                            borderWidth: 2,\n                            fill: false,\n                            data: [],\n                            stack: 1,\n                        },\n                    ]\n                }\n        }\n\n        this.setState({\n            showHistory: event.target.checked,\n            chartData: tempChartD,\n        });\n\n        console.log(this.state);\n        // Then reload data\n        this.populateData(labels, tempChartD);\n    };\n\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n                <div style={{paddingBottom: '20px', float: 'right'}}>\n                    Show History:\n                    <Switch\n                        checked={this.state.showHistory}\n                        onChange={this.handleHistoryChange('showHistory')}\n                        value=\"showHistory\"\n                        color=\"primary\"\n                    />\n                </div>\n                <Bar\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LineChart;","import React, {Component} from 'react';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport LineChart from './lineChart';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{padding: 8 * 3}}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass Timeframe extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props.parentState);\n    }\n\n    state = {\n        tabValue: this.props.parentState.Timeframe.tabValue,\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className=\"conversionComponent\">\n                <h3>Timeframe</h3>\n\n                <Card>\n                    <CardHeader color=\"prime\">\n                        <h4 className=\"cardTitleWhite\">Touches (Medium) v Conversions</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <LineChart/>\n                    </CardBody>\n                </Card>\n\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Timeframe);","import React, {Component} from 'react';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport USAMap from \"react-usa-map\";\nimport './Geo.css';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nclass Geo extends Component {\n\n    state = {\n        geoView: 'state',\n        mapDatatype: 'call',\n        currentState: '',\n        customConfig: '',\n    };\n\n    componentDidMount() {\n        // Mouseover geo map event listener\n        const geoMapElement = document.querySelector(\".us-state-map\");\n        geoMapElement.addEventListener(\"mouseover\", event => {\n            // this.state.currentState = event.target.dataset.name;\n            this.setState({\n                currentState: event.target.dataset.name\n            });\n        });\n\n        this.statesCustomConfig();\n    }\n\n    // Mandatory for maps library\n    mapHandler = (event) => {\n        alert('Click handler for: ' + event.target.dataset.name);\n    };\n\n    // Configuration for display map data\n    statesCustomConfig = () => {\n        let colors = ['#58A4BD', '#54BB97', '#50B956', '#87B74D', '#B14268', '#AF3FA8'];\n        if (this.state.geoView === 'bubble') {\n            colors = ['#92ddc8', '#81b69d', '#5aa17f', '#137a63', '#0a3a2a', ''];\n        }\n        if (this.state.customConfig === '') {\n            this.setState({\n                customConfig: {\n                    \"AL\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"AK\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"AZ\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"AR\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"CA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"CO\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"CT\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"DC\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"DE\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"FL\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"GA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"HI\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"ID\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"IL\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"IN\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"IA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"KS\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"KY\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"LA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"ME\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MD\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MI\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MN\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MS\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MO\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"MT\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"NE\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"NV\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"NH\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"NJ\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                        // clickHandler: (event) => console.log('Custom handler for NJ', event.target.dataset)\n                    },\n                    \"NM\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"NY\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"NC\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"ND\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"OH\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"OK\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"OR\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"PA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"RI\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"SC\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"SD\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"TN\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"TX\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"UT\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"VT\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"VA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"WA\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"WV\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"WI\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    },\n                    \"WY\": {\n                        fill: colors[Math.floor(Math.random() * Math.floor(6))]\n                    }\n                }\n            });\n        } else {\n            return this.state.customConfig;\n        }\n    };\n\n    // update touch makeup filter state\n    handleSelect = name => event => {\n        this.setState({\n            [name]: event.target.value,\n            customConfig: ''\n        });\n    };\n\n    render() {\n        const {classes} = this.props;\n        const c = this.state.currentState;\n\n        return (\n            <div className=\"geoComponent\">\n\n                <h3>Geo</h3>\n                <Card>\n                    <CardHeader color=\"prime\">\n                        <h4 className=\"cardTitleWhite\">Conversion Heat Map (U.S.)</h4>\n                    </CardHeader>\n                    <CardBody className={classes.cardConversionTable}>\n                        <div style={{paddingBottom: '20px', textAlign: 'left'}}>\n                            <FormControl style={{width: '180px', textAlign: 'center', padding: '6px'}}>\n                                <InputLabel htmlFor=\"filterGeoView\">Map View</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    value={this.state.geoView}\n                                    onChange={this.handleSelect('geoView')}\n                                    inputProps={{\n                                        name: 'geoView',\n                                        id: 'filterGeoView',\n                                    }}\n                                >\n                                    <MenuItem value={'state'}>State</MenuItem>\n                                    <MenuItem value={'bubble'}>Bubble</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl style={{width: '180px', textAlign: 'center', padding: '6px'}}>\n                                <InputLabel htmlFor=\"filterMapDatatype\">Map Datatype</InputLabel>\n                                <Select\n                                    className=\"skuFilterSelect\"\n                                    value={this.state.mapDatatype}\n                                    onChange={this.handleSelect('mapDatatype')}\n                                    inputProps={{\n                                        name: 'mapDatatype',\n                                        id: 'filterMapDatatype',\n                                    }}\n                                >\n                                    <MenuItem value={'call'}>Calls</MenuItem>\n                                    <MenuItem value={'inquiry'}>Inquiries</MenuItem>\n                                    <MenuItem value={'admit'}>Admits</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <ul className=\"geoLegend\">\n                                <li>\n                                    <div className=\"color-box\" style={{backgroundColor: '#58A4BD'}}></div>\n                                    0 - 9\n                                </li>\n                                <li>\n                                    <div className=\"color-box\" style={{backgroundColor: '#54BB97'}}></div>\n                                    10 - 19\n                                </li>\n                                <li>\n                                    <div className=\"color-box\" style={{backgroundColor: '#50B956'}}></div>\n                                    20 - 29\n                                </li>\n                                <li>\n                                    <div className=\"color-box\" style={{backgroundColor: '#87B74D'}}></div>\n                                    30 - 49\n                                </li>\n                                <li>\n                                    <div className=\"color-box\" style={{backgroundColor: '#B14268'}}></div>\n                                    50 - 74\n                                </li>\n                                <li>\n                                    <div className=\"color-box\" style={{backgroundColor: '#AF3FA8'}}></div>\n                                    75+\n                                </li>\n                            </ul>\n                        </div>\n                        <br/>\n\n                        <div className=\"col-lg-12\" style={{display: 'inline-flex'}}>\n                            <div className=\"col-lg-4\" style={{minWidth: '240px', padding: '12px'}}>\n                                <Card>\n                                    <CardBody>\n                                        <h3>Info</h3>\n                                        <Divider/>\n                                        <List style={{float: 'left'}}>\n                                            <ListItem>\n                                                <ListItemText primary={\"State: \" + c} />\n                                            </ListItem>\n                                            <ListItem>\n                                                <ListItemText primary={\"Conversions: \"} />\n                                            </ListItem>\n                                        </List>\n                                    </CardBody>\n                                </Card>\n                            </div>\n                            <div className=\"col-lg-8\" >\n                                <USAMap className=\"tooltip\" customize={this.statesCustomConfig()}\n                                        onClick={this.mapHandler}\n                                        title={\"\"}>\n                            <span id=\"tooltip-span\">\n                                <img alt=\"\" src=\"http://www.google.com/images/srpr/logo4w.png\"/>\n                            </span>\n                                </USAMap>\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Geo);","import React, {Component} from \"react\";\nimport {ResponsivePie} from 'nivo';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from \"../../tools/Card/CardBody\";\nimport Card from \"../../tools/Card/Card\";\n\nexport default class FacilityPie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // chartData: [\n            //     {\n            //         \"id\": \"Referring\",\n            //         \"label\": \"Referring\",\n            //         \"value\": 425,\n            //         \"color\": '#4EAF4A'\n            //     },\n            //     {\n            //         \"id\": \"Direct\",\n            //         \"label\": \"Direct\",\n            //         \"value\": 180,\n            //         \"color\": '#377EB8'\n            //     },\n            //     {\n            //         \"id\": \"Ad-Video\",\n            //         \"label\": \"Ad-Video\",\n            //         \"value\": 539,\n            //         \"color\": '#FF6F00'\n            //     },\n            //     {\n            //         \"id\": \"Email\",\n            //         \"label\": \"Email\",\n            //         \"value\": 292,\n            //         \"color\": '#AF1B3F'\n            //     },\n            //     {\n            //         \"id\": \"Organic\",\n            //         \"label\": \"Organic\",\n            //         \"value\": 317,\n            //         \"color\": '#963484'\n            //     },\n            //     {\n            //         \"id\": \"Offline\",\n            //         \"label\": \"Offline\",\n            //         \"value\": 191,\n            //         \"color\": '#FFD600'\n            //     },\n            //     {\n            //         \"id\": \"CPC\",\n            //         \"label\": \"CPC\",\n            //         \"value\": 247,\n            //         \"color\": '#80A1C1'\n            //     }\n            // ]\n            chartData: [\n                {\n                    \"id\": \"Referring\",\n                    \"label\": \"Referring\",\n                    \"value\": 425,\n                    \"color\": '#365CA0',\n                    \"percent\": 0\n                },\n                {\n                    \"id\": \"Direct\",\n                    \"label\": \"Direct\",\n                    \"value\": 180,\n                    \"color\": '#33C3E9',\n                    \"percent\": 0\n                },\n                {\n                    \"id\": \"Ad-Video\",\n                    \"label\": \"Ad-Video\",\n                    \"value\": 539,\n                    \"color\": '#33BFBB',\n                    \"percent\": 0\n                },\n                {\n                    \"id\": \"Organic\",\n                    \"label\": \"Organic\",\n                    \"value\": 292,\n                    \"color\": '#A3D50C',\n                    \"percent\": 0\n                },\n                {\n                    \"id\": \"Email\",\n                    \"label\": \"Email\",\n                    \"value\": 317,\n                    \"color\": '#FFD600',\n                    \"percent\": 0\n                },\n                {\n                    \"id\": \"Offline\",\n                    \"label\": \"Offline\",\n                    \"value\": 191,\n                    \"color\": '#E53947',\n                    \"percent\": 0\n                },\n                {\n                    \"id\": \"CPC\",\n                    \"label\": \"CPC\",\n                    \"value\": 247,\n                    \"color\": '#9E5E8C',\n                    \"percent\": 0\n                }\n            ]\n        };\n\n        this.loadData();\n    }\n\n    loadData = () => {\n        let tempChartData = this.state.chartData;\n        let totalVal = 2191;\n\n        for (let i = 0; i < tempChartData.length; i++) {\n            tempChartData[i].percent = (tempChartData[i].value/totalVal * 100).toFixed(0);\n        }\n\n        console.log(tempChartData);\n\n        this.setState({\n            chartData: tempChartData,\n        })\n    };\n\n    render() {\n        let nivoData = this.state.chartData;\n        let propsColor = this.props.color;\n        let title = this.props.title;\n\n        return (\n            <Card className=\"nivoCard\" style={{width: '30%'}}>\n                <CardHeader color={propsColor}>\n                    <h4 className=\"nivoCardTitle\">{title}</h4>\n                </CardHeader>\n                <CardBody>\n                    <div className=\"nivoGraph\">\n                        <ResponsivePie\n                            data={this.state.chartData}\n                            margin={{\n                                \"top\": 30,\n                                \"right\": 20,\n                                \"bottom\": 30,\n                                \"left\": 20\n                            }}\n                            innerRadius={0.5}\n                            padAngle={0.7}\n                            cornerRadius={3}\n                            colorBy={function(e){return e.color}}\n                            borderWidth={1}\n                            borderColor=\"inherit:darker(0.2)\"\n                            enableRadialLabels={false}\n                            radialLabelsSkipAngle={10}\n                            radialLabelsTextXOffset={6}\n                            radialLabelsTextColor=\"#333333\"\n                            radialLabelsLinkOffset={0}\n                            radialLabelsLinkDiagonalLength={16}\n                            radialLabelsLinkHorizontalLength={24}\n                            radialLabelsLinkStrokeWidth={1}\n                            radialLabelsLinkColor=\"inherit\"\n                            sliceLabel={function(e){return\"\".concat(e.id,\"\\n \").concat(e.percent, \"% (\").concat(e.value,\")\")}}\n                            slicesLabelsSkipAngle={10}\n                            slicesLabelsTextColor=\"#fff\"\n                            animate={true}\n                            motionStiffness={90}\n                            motionDamping={15}\n                        />\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Bar} from 'react-chartjs-2';\nimport toolbox from \"../../tools/toolbox\";\nimport moment from 'moment';\n\n\nexport class FacilityVolumeChart extends Component {\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        let toDate = yakPak == null ? new Date() : new Date(yakPak.DateFrame.To);\n        // let startDay = yakPak == null ? moment().add(-7, 'days') : moment(yakPak.DateFrame.From);\n        // let endDay = yakPak == null ? moment() : moment(yakPak.DateFrame.To);\n        // let numbDays = endDay.diff(startDay, 'days');\n\n        let primaryLabels = [];\n        let temp = moment(toDate);\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        // for (let i = -1; i < numbDays; i++) {\n        //     // parse date for how many days prior\n        //     primaryLabels.unshift(moment(temp).subtract(i, 'd').format('M/D'));\n        // }\n\n        // Generate date labels starting with 'toDate' and iterating back through length of data\n        for (let i = -1; i < 12; i++) {\n            // parse date for how many days prior\n            primaryLabels.unshift(moment(temp).subtract(i, 'months').format('MMM \\'YY'));\n        }\n\n        this.state = {\n            showHistory: false,\n            chartData: {\n                labels: primaryLabels,\n                datasets: [\n                    {\n                        data: [],\n                        yAxisID: 'b',\n                        type: 'line',\n                        label: 'Inquiries',\n                        fill: false,\n                        backgroundColor: \"#fff\",\n                        borderColor: \"#03DAC6\",\n                        borderCapStyle: 'butt',\n                        borderDash: [10, 10],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        lineTension: .3,\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderColor: \"#03DAC6\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"#03DAC6\",\n                        pointHoverBorderColor: \"#fff\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 4,\n                        pointHitRadius: 10\n                    },\n                    {\n                        data: [],\n                        yAxisID: 'b',\n                        type: 'line',\n                        label: 'Admits',\n                        fill: false,\n                        backgroundColor: \"#fff\",\n                        borderColor: \"#018786\",\n                        borderCapStyle: 'butt',\n                        borderJoinStyle: 'miter',\n                        lineTension: .3,\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderColor: \"#018786\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"#018786\",\n                        pointHoverBorderColor: \"#fff\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 4,\n                        pointHitRadius: 10\n                    },\n                    {\n                        label: \"Referring\",\n                        backgroundColor: '#4EAF4A',\n                        borderColor: '#4EAF4A',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],  // chart data comes from props in domain-card\n                        stack: 1,\n                    },\n                    {\n                        label: \"Direct\",\n                        backgroundColor: '#377EB8',\n                        borderColor: '#377EB8',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Ad-Video\",\n                        backgroundColor: '#FF6F00',\n                        borderColor: '#FF6F00',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Email\",\n                        backgroundColor: '#AF1B3F',\n                        borderColor: '#AF1B3F',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Organic\",\n                        backgroundColor: '#963484',\n                        borderColor: '#963484',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"Offline\",\n                        backgroundColor: '#FFD600',\n                        borderColor: '#FFD600',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                    {\n                        label: \"CPC\",\n                        backgroundColor: '#80A1C1',\n                        borderColor: '#80A1C1',\n                        borderWidth: 2,\n                        fill: false,\n                        data: [],\n                        stack: 1,\n                    },\n                ]\n            },\n            chartOptions: {\n                tooltips: {\n                    titleFontSize: 0,\n                    titleSpacing: 0,\n                    callbacks: {\n                        label: function (tooltipItem, data) {\n                            let label = data.datasets[tooltipItem.datasetIndex].label + ' ' +\n                                data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].pointLabel;\n                            return label + ': (' + tooltipItem.yLabel + ')';\n                        }\n                    }\n                },\n                responsive: true,\n                scales: {\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Date'\n                        },\n                        time: {\n                            unit: 'day',\n                            displayFormats: {\n                                quarter: 'MMM D'\n                            }\n                        },\n                        distribution: 'series',\n                    }],\n                    yAxes: [{\n                        id: 'a',\n                        weight: 2,\n                        position: 'left',\n                        stacked: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Calls'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    },{\n                        id: 'b',\n                        weight: 1,\n                        stacked: false,\n                        position: 'right',\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Inquiries / Admits'\n                        },\n                        ticks: {\n                            beginAtZero: true,\n                        }\n                    }]\n                }\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.calculateDateRange();\n    }\n\n    // Grab the current stored date frame and label chart data\n    calculateDateRange = () => {\n        let yakPak = toolbox.retrievePak();\n\n        // Check if we have comparison dates\n        if (yakPak.DateFrame.CompareFrom !== '' && yakPak.DateFrame.CompareTo !== '') {\n            let compareToDate = new Date(yakPak.DateFrame.CompareTo);\n            let compareStartDay = moment(yakPak.DateFrame.CompareFrom);\n            let compareEndDay = moment(yakPak.DateFrame.CompareTo);\n            let compareNumbDays = compareEndDay.diff(compareStartDay, 'days');\n\n            let tempLabels = [];\n\n            for (let i = -1; i < compareNumbDays; i++) {\n                // parse date for how many days prior\n                let temp = new Date();\n                temp.setDate(compareToDate.getDate() - i);\n                tempLabels.unshift((compareToDate.getUTCMonth() + 1) + \"/\" + temp.getDate());\n            }\n\n            // Populate data with comparison dates\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        } else {\n            this.populateData(this.state.chartData.labels, this.state.chartData);\n        }\n    };\n\n    // Pass in calculated date labels, assign them to\n    populateData = (dateLabels, tempObj) => {\n        // Grab data from state if none passed in\n        if (tempObj == null) {\n            tempObj = this.state.chartData;\n        }\n        let datasets = tempObj.datasets.length;\n\n        console.log(datasets);\n\n        for (let i = 0; i < dateLabels.length; i++) {\n            for (let j = 0; j < datasets; j++) {\n                tempObj.datasets[j].data[i] = {\n                    \"x\": dateLabels[i],\n                    \"y\": Math.floor(Math.random() * Math.floor(20)),\n                    \"pointLabel\": dateLabels[i]\n                };\n            }\n\n\n        }\n\n        console.log(tempObj);\n\n        let dummyOptions = this.state.chartOptions;\n        // Set state with fresh data\n        this.setState({\n            chartData: tempObj,\n            chartOptions: dummyOptions,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"reactChart\">\n\n                <Bar\n                    data={this.state.chartData}\n                    options={this.state.chartOptions}\n                    className='facilityBar'\n                />\n            </div>\n        );\n    }\n}\n\nexport default FacilityVolumeChart;","import React, {Component} from 'react';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport TextField from '@material-ui/core/TextField';\nimport FacilityPie from './facilityPie';\nimport FacilityVolumeChart from './facilityVolumeChart';\nimport MaterialIcon from 'material-icons-react';\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n\n\nclass FacilityVolume extends Component {\n\n    state = {\n        commentBox: '',\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"facilityVolumeComponent\">\n\n                <div className=\"row\" style={{display: 'inline-flex', width: '90%'}}>\n                    <div style={{width: '40%', margin: 'auto'}}>\n                        <img src={this.props.logo} style={{width: '50%'}} alt=\"logo\"/>\n                        <h3><b><em>Volume</em></b></h3>\n                    </div>\n                    <div style={{width: '55%', margin: 'auto'}}>\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Highlights\"\n                            multiline\n                            rows=\"8\"\n                            rowsMax=\"12\"\n                            value={this.state.commentBox}\n                            onChange={this.handleChange('commentBox')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            style={{minWidth: '80%', marginTop: '25px', overflowX: 'hidden'}}\n                        />\n                    </div>\n                </div>\n\n                <div className='facilityPieRow'>\n                    <FacilityPie color={\"info\"} title={\"Spend\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                    <FacilityPie color={\"info\"} title={\"Traffic\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                    <FacilityPie color={\"info\"} title={\"Calls\"} chartCallData={[11, 14, 13, 8, 10, 12]}/>\n                </div>\n\n                <Card className='facilityBarChart' style={{marginTop: '20px'}}>\n                    <CardHeader color=\"info\">\n                        <h4 className=\"cardTitleWhite\">Year/Year by Month</h4>\n                    </CardHeader>\n                    <CardBody>\n                        <FacilityVolumeChart/>\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardHeader color=\"info\">\n                        <h4 className=\"cardTitleWhite\">Miscellaneous</h4>\n                    </CardHeader>\n                    <CardBody>\n                        <div className=\"row\" style={{display: 'block', width: '90%'}}>\n                            <ul className='ulFacility'>\n                                <Tooltip title=\"Website Updates\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='update' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Collateral\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='import_contacts' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Photos\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='photo' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Video\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='videocam' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Rebrand\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='star_half' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Online Reviews\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='mood' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Media\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='video_library' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Advertisement\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='tv' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Email\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='email' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n\n                                <Tooltip title=\"Social Media\" placement=\"bottom\">\n                                    <li>\n                                        <MaterialIcon icon='group_add' color=''/> 1337\n                                    </li>\n                                </Tooltip>\n                            </ul>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default FacilityVolume;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: 'auto',\n    },\n    backButton: {\n        marginRight: theme.spacing.unit,\n    },\n    instructions: {\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n    },\n});\n\n// Subtext on stepper numbers\nfunction getSteps() {\n    return ['Input some facility info', 'Maybe some more info', 'Double check that info, then display'];\n}\n\nclass FacilityFormStepper extends React.Component {\n    state = {\n        activeStep: 0,\n        formAdmits: '',\n        formInquiries: '',\n    };\n\n    getStepContent = (stepIndex) => {\n        switch (stepIndex) {\n            case 0:\n                return(\n                    <div style={{display: 'block'}}>\n                        <TextField\n                            id=\"admits\"\n                            label=\"Admits\"\n                            type=\"number\"\n                            value={this.state.formAdmits}\n                            onChange={this.handleFormChange('formAdmits')}\n                            margin=\"normal\"\n                        />\n                        <br/>\n                        <TextField\n                            id=\"inquiries\"\n                            label=\"Inquiries\"\n                            type=\"number\"\n                            value={this.state.formInquiries}\n                            onChange={this.handleFormChange('formInquiries')}\n                            margin=\"normal\"\n                        />\n                    </div>\n                );\n            case 1:\n                return 'Other settings for that data';\n            case 2:\n                return 'Now we\\'re cookin!';\n            default:\n                return 'Unknown stepIndex';\n        }\n    };\n\n    handleFormChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n        console.log(this.state);\n    };\n\n    handleNext = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep + 1,\n        }));\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1,\n        }));\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const steps = getSteps();\n        const { activeStep } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} alternativeLabel>\n                    {steps.map(label => {\n                        return (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div>\n                    {this.state.activeStep === steps.length ? (\n                        <div>\n                            <Typography component={'span'} className={classes.instructions}>All steps completed</Typography>\n                            <Button onClick={this.handleReset}>Reset</Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <Typography component={'span'} className={classes.instructions}>{this.getStepContent(activeStep)}</Typography>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.backButton}\n                                >\n                                    Back\n                                </Button>\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nFacilityFormStepper.propTypes = {\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(FacilityFormStepper);","import React, {Component} from \"react\";\nimport {ResponsivePie} from 'nivo';\nimport CardBody from \"../../tools/Card/CardBody\";\nimport Card from \"../../tools/Card/Card\";\n// Import accent color from css file\nimport {fAccent} from './facility.css';\n\nexport default class FacilityAdmitsGoal extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let facilityAdmitGoal = 210;\n        let facilityAdmitVal = 150;\n        let facilityAdmitPercent = (facilityAdmitVal/facilityAdmitGoal * 100).toFixed(1);\n\n        this.state = {\n            admitGoal: facilityAdmitGoal,\n            admitVal: facilityAdmitVal,\n            chartData: [\n                {\n                    \"id\": \"Admits\",\n                    \"label\": \"Admits\",\n                    \"value\": facilityAdmitVal,\n                    \"color\": fAccent,\n                    \"percent\": \"\".concat(facilityAdmitPercent,\"%\")\n                },\n                {\n                    \"id\": \"\",\n                    \"label\": \"\",\n                    \"value\": facilityAdmitGoal - facilityAdmitVal,\n                    \"color\": 'none',\n                    \"percent\": \"\"\n                },\n            ]\n        }\n    }\n\n    render() {\n        let nivoData = this.state.chartData;\n        let title = this.props.title;\n\n        return (\n            <Card className=\"admitsCard\" style={{width: '30%', margin: 'auto', padding: '0px', background: 'none', boxShadow: 'none'}}>\n                <CardBody>\n                    <h4 id=\"admitsGoalTitle\" className=\"nivoCardTitle\"><strong>{title}</strong></h4>\n                    <h4 className=\"nivoCardTitle\" style={{color: 'black'}}>{this.state.admitVal} / {this.state.admitGoal}</h4>\n                    <div className=\"admitsPieGraph\">\n                        <ResponsivePie\n                            data={nivoData}\n                            margin={{\n                                \"top\": 0,\n                                \"right\": 0,\n                                \"bottom\": 0,\n                                \"left\": 0\n                            }}\n                            innerRadius={0}\n                            padAngle={0.7}\n                            cornerRadius={3}\n                            colorBy={function(e){return e.color}}\n                            borderWidth={0}\n                            borderColor=\"inherit:darker(0.2)\"\n                            enableRadialLabels={false}\n                            sliceLabel={function(e){return e.percent}}\n                            slicesLabelsSkipAngle={10}\n                            slicesLabelsTextColor=\"#fff\"\n                            animate={false}\n                            motionStiffness={90}\n                            motionDamping={15}\n                        />\n                    </div>\n                </CardBody>\n            </Card>\n        );\n    }\n}","import React, {Component} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '../../tools/Card/Card';\nimport CardHeader from \"../../tools/Card/CardHeader\";\nimport CardBody from '../../tools/Card/CardBody';\nimport TextField from '@material-ui/core/TextField';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from '@material-ui/core/Typography';\nimport MaterialIcon from 'material-icons-react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FacilityVolume from './FacilityVolume';\nimport FacilityFormStepper from './facilityForm';\nimport moment from 'moment';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport FacilityAdmitsGoal from './facilityAdmitsGoal';\n\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    cardConversionGraph: {\n        width: '90%',\n        margin: '0 6px',\n    },\n    cardConversionTable: {\n        overflowX: 'auto',\n    },\n};\n\nconst logoURL = \"https://s3.amazonaws.com/acadia-yak/facility_logos/\";\n\nclass Facility extends Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.parentState.SelectedFacility.length > 1) {\n            alert('This page can show only one facility report at a time. \\n Remove the extras and reload the page.');\n        }\n    }\n\n    state = {\n        fName: this.props.parentState.SelectedFacility[0] || 'Acadia Facility',\n        fLogo: 'LOGO HERE',\n        fType: 'Inpatient',\n        fLoc: 'location',\n        fDomain: this.props.parentState.SelectedFacilityDomain || 'domain',\n        fAddress: 'Facility Address',\n        fPhone: 'Facility Phone',\n        commentBox: '',\n        spendCommentBox: '',\n        webformsCommentBox: '',\n        admitsCommentBox: '',\n        inquiriesCommentBox: '',\n        callsCommentBox: '',\n        trafficCommentBox: '',\n        cpaCommentBox: '',\n        month: moment(this.props.parentState.DateFrame.To).format('MMMM YYYY'),\n        momLabel: moment(this.props.parentState.DateFrame.To).format('MMM \\'YY') + '/' + moment(this.props.parentState.DateFrame.To).add(-1, 'M').format('MMM \\'YY'),\n        ytd: moment(this.props.parentState.DateFrame.To).format('MMM YYYY'),\n        ytdPrevious: moment(this.props.parentState.DateFrame.To).add(-1, 'y').format('MMM YYYY'),\n    };\n\n    componentDidMount() {\n        // Check if we have a facility then create logo url string to show logo\n        if (this.state.fDomain !== 'domain') {\n            this.setState({\n                fLogo: logoURL + this.props.parentState.SelectedFacilityDomain + \"-logo.png\",\n            });\n\n            document.title = \"YAK - \" + this.state.fName;\n        }\n    }\n\n    // Load selected facility into view\n    loadFacility = (facility) => {\n        this.setState({\n            fName: '',\n            fLogo: '',\n            fType: '',\n            fLoc: '',\n        })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    pxToMm = (px) => {\n        return Math.floor(px/document.getElementById('captureArea').offsetHeight);\n    };\n\n    mmToPx = (mm) => {\n        return document.getElementById('captureArea').offsetHeight*mm;\n    };\n\n    range = (start, end) => {\n        return Array(end-start).join(0).split(0).map(function(val, id) {return id+start});\n    };\n\n\n    printReport = () => {\n        // html2canvas(document.querySelector(\"#captureArea\")).then(canvas => {\n        //     document.body.appendChild(canvas)\n        // });\n\n        const input = document.getElementById('captureArea');\n        const inputHeightMm = this.pxToMm(input.offsetHeight);\n        const a4WidthMm = 210;\n        const a4HeightMm = 297;\n        const a4HeightPx = this.mmToPx(a4HeightMm);\n        const numPages = inputHeightMm <= a4HeightMm ? 1 : Math.floor(inputHeightMm/a4HeightMm) + 1;\n        console.log({\n            input, inputHeightMm, a4HeightMm, a4HeightPx, numPages, range: this.range(0, numPages),\n            comp: inputHeightMm <= a4HeightMm, inputHeightPx: input.offsetHeight\n        });\n\n        html2canvas(input)\n            .then((canvas) => {\n                const imgData = canvas.toDataURL('image/png');\n\n                // standard a4\n                let pdf = new jsPDF();\n                // Document of a4WidthMm wide and inputHeightMm high\n                if (inputHeightMm > a4HeightMm) {\n                    // elongated a4 (system print dialog will handle page breaks)\n                    pdf = new jsPDF('p', 'mm', [inputHeightMm+16, a4WidthMm]);\n                }\n\n                pdf.addImage(imgData, 'PNG', 0, 0);\n                pdf.save(`${this.state.fName}.pdf`);\n            });\n\n        console.log(\"Printing PDF Report\");\n    };\n\n    render() {\n        const {classes} = this.props;\n        // Concatenate logo url together\n        const fLogo = logoURL + this.props.parentState.SelectedFacilityDomain + \"-logo.png\";\n        // Set facility css rel; stripping out www. and .com\n        const facilityStyle = this.state.fDomain.replace(/(www\\.)/, '').replace(/(\\.com)/, '');\n        console.log(facilityStyle);\n\n        return (\n            <div id='captureArea' className='facilityComponent' rel={facilityStyle}>\n\n                <div className=\"row\" style={{display: 'inline-flex', width: '90%'}}>\n                    <Card className='facilityProfileCard'>\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Facility Logo\"\n                            style={{maxWidth: '60%', margin: 'auto'}}\n                            height=\"auto\"\n                            image={fLogo}\n                        />\n                        <CardContent style={{padding: '8px'}}>\n                            <h5><strong>Monthly Report:</strong></h5>\n                            <span id='monthText'>\n                                <strong>{this.state.month}</strong>\n                            </span>\n                            <h6>Facility:</h6>\n                            <span id='facilityNameText'>\n                                {this.props.parentState.SelectedFacility[0]}\n                            </span>\n                        </CardContent>\n                    </Card>\n\n                    <FacilityAdmitsGoal color={\"info\"} title={\"Admits Goal\"}/>\n\n                    {/*<div style={{width: '40%', margin: 'auto'}}>*/}\n                        {/*<img id='facilityLogo' src={fLogo} style={{width: '50%'}} alt=\"logo\"/>*/}\n                        {/*<h3><b><em>Summary</em></b></h3>*/}\n                    {/*</div>*/}\n                    <div style={{width: '80%', margin: 'auto'}}>\n                        <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Highlights\"\n                            multiline\n                            rows=\"10\"\n                            rowsMax=\"12\"\n                            value={this.state.commentBox}\n                            onChange={this.handleChange('commentBox')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            style={{minWidth: '80%', marginTop: '25px', overflowX: 'hidden'}}\n                        />\n                    </div>\n                </div>\n\n                <Card id=\"statsSummary\">\n                    <CardHeader color=\"prime\">\n                        <h4 className=\"cardTitleWhite\">Stats Summary</h4>\n                    </CardHeader>\n                    <CardBody style={{display: 'inline-flex'}}>\n                        <Table className={classes.table} style={{width: '60%'}}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell align=\"center\">MoM {this.state.momLabel}</TableCell>\n                                    <TableCell align=\"center\">YTD {this.state.ytd}</TableCell>\n                                    <TableCell align=\"center\">YTD {this.state.ytdPrevious}</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow key='spend'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        Spend\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\">\n                                            <span style={{color: '#f44336'}}> -6%</span> (184)\n                                        </span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\">\n                                            <span style={{color: '#f44336'}}> -6%</span> (184)\n                                        </span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\">\n                                            <span style={{color: '#4caf50'}}> 6%</span> (184)\n                                        </span>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='webforms'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        Webforms\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='admits'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        Admits\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='inquiries'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        Inquiries\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='calls'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        Calls\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='traffic'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        Traffic\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='cpa'>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"tableRowHeader\">\n                                        CPA\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_up' color='#4caf50'/>\n                                        <span className=\"iconText\"> 6% (184)</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <MaterialIcon icon='trending_down' color='#f44336'/>\n                                        <span className=\"iconText\"> -6% (184)</span>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <Table className={classes.table} style={{width: '40%', borderLeft: '2px solid #222'}}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\">Non-Data Highlights</TableCell>\n                                    <TableCell align=\"center\">Comments</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow key='websiteUpdates'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='important_devices' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Website Updates</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='branding'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='security' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Branding</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='emailMarketing'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='alternate_email' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Email Marketing</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='collateral'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='description' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Collateral</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='globalUpdates'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='cloud_done' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Global Updates</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='adVideo'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='play_circle_filled' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Ad & Video</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow key='nonDataPoint'>\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                        <MaterialIcon icon='flag' color='#03B5E2'/>\n                                        <span className=\"iconText\"> Non-Data Point</span>\n                                    </TableCell>\n                                    <TableCell>\n                                        <TextField\n                                            id=\"outlined-multiline-flexible\"\n                                            label=\"\"\n                                            multiline\n                                            rows=\"1\"\n                                            rowsMax=\"4\"\n                                            value={this.state.cpaCommentBox}\n                                            onChange={this.handleChange('cpaCommentBox')}\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{minWidth: '100%'}}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </CardBody>\n                </Card>\n\n                <hr className=\"hidePrint\" style={{width: '90%'}}/>\n                <FacilityVolume parentState={this.state} logo={fLogo}/>\n                <hr style={{width: '90%'}}/>\n\n                <FacilityFormStepper/>\n\n                <ExpansionPanel style={{width: '90%', display: 'inline-block', background: 'none', boxShadow: 'none'}}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                        <Typography>Supporting Data</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        Dis is data.\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Facility);","import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Facility from './Facility';\nimport MaterialIcon from 'material-icons-react';\nimport './facility.css';\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n\n\nclass PrintComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className='facilityPrint'>\n                <ReactToPrint\n                    pageStyle={{\n                        width: '100%',\n                        paddingLeft: '0px',\n                        display: 'inline-block'\n                    }}\n                    trigger={() =>\n                        <span style={{position: 'absolute', right: '5%', cursor: 'pointer'}}>\n                            <MaterialIcon icon='print' color='#4caf50'/>\n                            <Tooltip title=\"Print Preview\" placement=\"bottom\">\n                                <span style={{fontSize: '16px', verticalAlign: 'top'}}> Print Report</span>\n                            </Tooltip>\n                        </span>\n                    }\n                    content={() => this.componentRef}\n                />\n                <h3>Facility Report</h3>\n                <Facility ref={el => (this.componentRef = el)} parentState={this.props.parentState}/>\n            </div>\n        );\n    }\n}\n\nexport default PrintComponent;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport moment from 'moment';\nimport toolbox from './tools/toolbox';\nimport FacilityAutoComplete from './tools/facilityAutoComplete';\nimport Sidebar from './sidebar/Sidebar';\nimport Conversion from './components/Conversion/Conversion';\nimport ConversionPath from './components/Conversion/ConversionPath';\nimport Export from './components/Export/Export';\nimport Settings from \"./components/Settings/Settings\";\nimport Explorer from \"./components/Explorer/Explorer\";\nimport DateComponent from './tools/DateComponent';\nimport Touch from \"./components/Touch/Touch\";\nimport Timeframe from \"./components/Timeframe/Timeframe\";\nimport Geo from \"./components/Geo/Geo\";\nimport PrintComponent from './components/Facility/PrintComponent';\n\n\n// Global state for local storage\nlet savedState = [];\n\nclass Dash extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // Retrieve local store\n        let yakPak = toolbox.retrievePak();\n        console.log(\"Saved PAK: \", JSON.stringify(yakPak));\n\n        // If local store not found, initialize base state\n        if (yakPak == null) {\n            this.state = {\n                SelectedFacility: [],\n                SelectedFacilityDomain: '',\n                DateFrame: {\n                    From: moment().add(-7, 'days').format('YYYY-MM-DD'),\n                    To: moment().format('YYYY-MM-DD'),\n                    CompareFrom: '',\n                    CompareTo: ''\n                },\n                Filter: {\n                    conversion: [],\n                    touch: [],\n                    rollup: [],\n                    channel: [],\n                    source: [],\n                    campaign: [],\n                    tier: [],\n                    medium: [],\n                    disorder: [],\n                    network: [],\n                    targetingMethod: [],\n                    format: [],\n                    message: [],\n                    ageRange: [],\n                    ethnicity: [],\n                    familyRole: [],\n                    gender: [],\n                    income: [],\n                    interestsBehaviors: [],\n                    language: [],\n                    education: [],\n                    occupation: [],\n                    relationship: [],\n                    religion: []\n                },\n                Touch: {\n                    tabValue: 0\n                },\n                Conversion: {\n                    tabValue: 0\n                },\n                Explorer: {\n                    tabValue: 0\n                },\n                Storyboard: {\n                    tabValue: 0,\n                    searchMetric: 'ip',\n                    storyPivot: 'session'\n                },\n                Builder: {\n                    Columns: [],\n                },\n                Timeframe: {\n                    tabValue: 0\n                },\n            };\n        } else {\n            this.state = toolbox.retrievePak();\n        }\n\n        // Set global state so it's not empty\n        savedState = this.state;\n    }\n\n\n    // Check if user was authenticated, return true if so\n    isAuthenticated() {\n        return true;\n    }\n\n    // // If not logged in redirect to login\n    // componentWillMount(){\n    //     if(!this.Auth.loggedIn())\n    //         this.props.history.replace('/login');\n    // }\n\n    // Set offload func to save to local store just once on unload\n    componentDidMount() {\n        window.onbeforeunload = function () {\n            toolbox.storePak(savedState);\n        }\n    }\n\n    // Update global state for onbeforeunload func\n    componentDidUpdate() {\n        savedState = this.state;\n    }\n\n    // Update SelectedFacility state; pass back from facility auto complete component\n    updateSelectedFacility = (name, domain) => {\n        this.setState({\n            SelectedFacility: name,\n            SelectedFacilityDomain: domain,\n        }, () => {\n            if (this.state.SelectedFacility.length > 0) {\n                this.refreshView();\n            }\n        });\n    };\n\n    // Update SKUFilter state; pass back from skufilter component\n    updateSKUFilter = (val) => {\n        this.setState({\n            Filter: val\n        });\n        console.log(this.state);\n    };\n\n    // Update DateFrame state\n    updateDate = (val) => {\n        this.setState({\n            DateFrame: val\n        });\n        console.log(val);\n        localStorage.setItem(\"fromDate\", val.From);\n        localStorage.setItem(\"toDate\", val.To);\n        localStorage.setItem(\"compareFromDate\", val.CompareFrom);\n        localStorage.setItem(\"compareToDate\", val.CompareTo);\n    };\n\n    // For child elements to update dash state\n    updateDashConversion = (name, val) => {\n        this.setState({\n            Conversion: {\n                [name]: val\n            }\n        })\n    };\n\n    // For child elements to update dash state\n    updateDashTimeframe = (name, val) => {\n        this.setState({\n            Timeframe: {\n                [name]: val\n            }\n        })\n    };\n\n    // For child elements to update dash state\n    updateDashStoryboard = (val) => {\n        this.setState({\n            Storyboard: val\n        });\n    };\n\n    // For child elements to update dash state\n    updateDashExplorer = (name, val) => {\n        this.setState({\n            Explorer:  {\n                [name]: val\n            }\n        });\n    };\n\n    // Reload view\n    refreshView = () => {\n        window.location.reload();\n    };\n\n\n    render() {\n        // Load dashboard if user is legit\n        if (this.isAuthenticated()) {\n            return (\n                <div className=\"dash\">\n                    <FacilityAutoComplete selected={this.state.SelectedFacility}\n                                          onUpdate={this.updateSelectedFacility}/>\n                    <DateComponent dateFrame={this.state.DateFrame} onUpdate={this.updateDate}\n                                refreshView={this.refreshView}/>\n\n                    <Sidebar selected={this.state.Filter} onUpdate={this.updateSKUFilter}\n                             rightDrawer={this.state.rightDrawer}/>\n\n\n                    <Route path=\"/touch\" render={() => <Touch parentState={this.state} updateDash={this.updateDashStoryboard}/>}/>\n                    <Route exact path=\"/conversion\" render={() => <Conversion parentState={this.state} updateDash={this.updateDashConversion}/>}/>\n                    <Route path=\"/conversion/path\" render={() => <ConversionPath parentState={this.state} updateDash={this.updateDashConversion}/>}/>\n                    <Route path=\"/explorer/\" render={() => <Explorer parentState={this.state} updateDash={this.updateDashExplorer}/>}/>\n                    <Route path=\"/export\" render={() => <Export selected={this.state.SelectedFacility}/>}/>\n                    <Route path=\"/timeframe\" render={() => <Timeframe parentState={this.state} updateDash={this.updateDashTimeframe}/>}/>\n                    <Route path=\"/geo\" render={() => <Geo parentState={this.state}/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/facility\" render={() => <PrintComponent parentState={this.state}/>}/>\n                    {/*<Route path=\"/facility\" render={() => <Facility parentState={this.state}/>}/>*/}\n\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h2>User Not Identified!</h2>\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default Dash;","// import decode from 'jwt-decode';\n\nexport default class AuthService {\n    // Initializing important variables\n    constructor(domain) {\n        this.domain = domain || 'http://localhost:8080'; // API server domain\n        this.fetch = this.fetch.bind(this); // React binding stuff\n        this.login = this.login.bind(this);\n        this.getProfile = this.getProfile.bind(this)\n    }\n\n    login(username, password) {\n        // Get a token from api server using the fetch api\n        return this.fetch(`${this.domain}/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n                username,\n                password\n            })\n        }).then(res => {\n            this.setToken(res.token); // Setting the token in localStorage\n            return Promise.resolve(res);\n        })\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken(); // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token); // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = token; // decode(token);\n\n            // Checking if token is expired, return True/False\n            return (decoded.exp < Date.now() / 1000);\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken = (idToken) => {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n    };\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    };\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    };\n\n    getProfile() {\n        // Using jwt-decode npm package to decode the token\n\n        // return decode(this.getToken());\n        return this.getToken();\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus = (response) => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response;\n        } else {\n            let error = new Error(response.statusText);\n            error.response = response;\n            throw error\n        }\n    }\n}\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AuthService from './AuthService';\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport CardHeader from \"../dashboard/tools/Card/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent/CardContent\";\nimport Card from \"../dashboard/tools/Card/Card\";\nimport CardActions from \"@material-ui/core/CardActions/CardActions\";\nimport './Login.css';\nimport logo from \"../assets/logo/yak-logo-fullbody.svg\";\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.Auth = new AuthService();\n    }\n\n    // Redirect login page if\n    componentWillMount() {\n        if (this.Auth.loggedIn())\n            this.props.history.replace('/');\n    }\n\n    render() {\n        return (\n            <div className=\"loginBlock\">\n                <img src={logo} style={{height: \"280px\"}} alt=\"logo\"/>\n                <br/>\n                <Card style={{width: '50%', minWidth: '400px'}}>\n                    <CardHeader color=\"prime\">\n                        <h4 className={'cardTitleWhite'}>YAK</h4>\n                    </CardHeader>\n                    <CardContent>\n                        <FormControl className=\"\">\n                            <form>\n                                <TextField\n                                    required\n                                    id=\"username-input\"\n                                    label=\"Username\"\n                                    className={'textField'}\n                                    margin=\"normal\"\n                                    onChange={this.handleChange}\n                                />\n                                <br/>\n                                <TextField\n                                    required\n                                    id=\"password-input\"\n                                    label=\"Password\"\n                                    className={'textField'}\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    margin=\"normal\"\n                                    onChange={this.handleChange}\n                                />\n                                <CardActions style={{display: 'block'}}>\n                                    <Button variant=\"contained\" size=\"large\"\n                                            onClick={this.props.onSubmit}\n                                            >\n                                        Login\n                                    </Button>\n                                </CardActions>\n                            </form>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n\n    handleChange(e) {\n        this.setState(\n            {\n                [e.target.name]: e.target.value\n            }\n        )\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n\n        this.Auth.login(this.state.username, this.state.password)\n            .then(res => {\n                this.props.history.replace('/story');\n            })\n            .catch(err => {\n                alert(err);\n            })\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport './App.css';\nimport Dash from './dashboard/Dash';\nimport Login from './login/Login.js';\nimport {connect} from 'react-redux';\nimport withRouter from \"react-router/es/withRouter\";\n\n\n// function onAuthRequired({history}) {\n//     history.push('/login');\n// }\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onUpdateUser = this.onUpdateUser.bind(this);\n    }\n\n    state = {\n        loggedIn: true\n    };\n\n    verifyLogin = () => {\n        this.setState({\n            loggedIn: true\n        })\n    };\n\n    onUpdateUser() {\n        this.props.onUpdateUser('sammy');\n    }\n\n    render() {\n        // migration to typography2\n        window.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\n        let path = window.location.hash;\n        console.log(path);\n\n        if (!this.state.loggedIn) {\n            return (\n                <div className=\"App\">\n                    <Login onSubmit={this.verifyLogin}/>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"App\">\n                    <Dash store={this.props.store}/>\n                </div>\n            );\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { items: state.items };\n};\n\n// const mapActionsToProps = {\n//     onUpdateUser: updateUser,\n//     onApiRequest: getFacilityList\n// };\n\n// const mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n//     return {};\n// };\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const UPDATE_USER = 'users:updateUser';\n\nexport function updateUser(newUser) {\n    return {\n        type: UPDATE_USER,\n        payload: {\n            user: newUser\n        }\n    }\n}","import {combineReducers} from 'redux';\nimport {UPDATE_USER} from \"./actions\";\n\n\n// generic reducer for similar store functionality updating\nfunction genericReducer(state = {}, {type, payload}) {\n    switch (type) {\n        case \"update\":\n            return payload;\n        default:\n            return state;\n    }\n}\n\n// update payload depending on input case type\nfunction userReducer(state = {}, {type, payload}) {\n    switch (type) {\n        case \"userLoggedIn\":\n            return payload;\n        case \"userLoggedOut\":\n            return payload;\n        case UPDATE_USER:\n            return payload;\n        default:\n            return state;\n    }\n}\n\nfunction SelectedFacilityReducer(state = {}, {type, payload}) {\n    switch (type) {\n        case \"updateFacilityList\":\n            return payload;\n        default:\n            return state;\n    }\n}\n\nfunction DateFrameReducer(state = {}, {type, payload}) {\n    let defaultDateframe = {\n        From: '',\n        To: '',\n        CompareFrom: '',\n        CompareTo: ''\n    };\n\n    switch (type) {\n        case \"clearDateFrame\":\n            return defaultDateframe;\n        case \"updateDateFrame\":\n            return payload;\n        default:\n            return state;\n    }\n}\n\nfunction FilterReducer(state = {}, {type, payload}) {\n    let defaultFilter = {\n        conversion: [],\n        touch: [],\n        rollup: [],\n        channel: [],\n        source: [],\n        campaign: [],\n        tier: [],\n        medium: [],\n        disorder: [],\n        network: [],\n        targetingMethod: [],\n        format: [],\n        message: [],\n        ageRange: [],\n        ethnicity: [],\n        familyRole: [],\n        gender: [],\n        income: [],\n        interestsBehaviors: [],\n        language: [],\n        education: [],\n        occupation: [],\n        relationship: [],\n        religion: []\n    };\n\n    switch (type) {\n        case \"clearFilter\":\n            return defaultFilter;\n        case \"updateFilter\":\n            return payload;\n        default:\n            return state;\n    }\n}\n\n// combine and export all reducers\nexport default combineReducers({\n    user: userReducer,\n    SelectedFacility: SelectedFacilityReducer,\n    SelectedFacilityDomain: genericReducer,\n    DateFrame: DateFrameReducer,\n    Filter: FilterReducer,\n    Touch: genericReducer,\n    Conversion: genericReducer,\n    Explorer: genericReducer,\n    Storyboard: genericReducer,\n    Builder: genericReducer,\n    Timeframe: genericReducer,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './global.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducers from './reducers';\nimport moment from 'moment';\n\n\nconst defaultState = {\n    SelectedFacility: [],\n    SelectedFacilityDomain: '',\n    DateFrame: {\n        From: moment().add(-7, 'days').format('YYYY-MM-DD'),\n        To: moment().format('YYYY-MM-DD'),\n        CompareFrom: '',\n        CompareTo: ''\n    },\n    Filter: {\n        conversion: [],\n        touch: [],\n        rollup: [],\n        channel: [],\n        source: [],\n        campaign: [],\n        tier: [],\n        medium: [],\n        disorder: [],\n        network: [],\n        targetingMethod: [],\n        format: [],\n        message: [],\n        ageRange: [],\n        ethnicity: [],\n        familyRole: [],\n        gender: [],\n        income: [],\n        interestsBehaviors: [],\n        language: [],\n        education: [],\n        occupation: [],\n        relationship: [],\n        religion: []\n    },\n    Touch: {\n        tabValue: 0\n    },\n    Conversion: {\n        tabValue: 0\n    },\n    Explorer: {\n        tabValue: 0\n    },\n    Storyboard: {\n        tabValue: 0,\n        searchMetric: 'ip',\n        storyPivot: 'session'\n    },\n    Builder: {\n        Columns: [],\n    },\n    Timeframe: {\n        tabValue: 0\n    },\n};\n\n// declare store using all combined reducers and a pre-loaded(default) state;\nconst store = createStore(\n    reducers,\n    defaultState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconsole.log(store.getState());\n\n// // redux test user action\n// const updateUserAction = {\n//     type: 'updateUser',\n//     payload: {\n//         user: 'john'\n//     }\n// };\n//\n// store.dispatch(updateUserAction);\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}